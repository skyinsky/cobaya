/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_RCFProto_WRAP_H_
#define SWIG_RCFProto_WRAP_H_

class SwigDirector__SwigCallback : public RCF::_SwigCallback, public Swig::Director {

public:
    SwigDirector__SwigCallback();
    virtual ~SwigDirector__SwigCallback();
    virtual void Run();
    virtual void ProtoRpcBegin(RCF::_SwigCallbackArgs *args, RCF::RcfProtoServer *server, RCF::RcfProtoSession *context, std::string const &serviceName, int methodId);
    virtual bool ValidateCertificate(RCF::_SwigCallbackArgs *args);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *, void *, void *, char *, int);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackRun, SWIG_Callback1_t callbackProtoRpcBegin, SWIG_Callback2_t callbackValidateCertificate);

private:
    SWIG_Callback0_t swig_callbackRun;
    SWIG_Callback1_t swig_callbackProtoRpcBegin;
    SWIG_Callback2_t swig_callbackValidateCertificate;
    void swig_init_callbacks();
};


#endif
