// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace cobaya {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class HisCobaya {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgStartReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgStartReq, global::cobaya.MsgStartReq.Builder> internal__static_cobaya_MsgStartReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgStartRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgStartRsp, global::cobaya.MsgStartRsp.Builder> internal__static_cobaya_MsgStartRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgStopReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgStopReq, global::cobaya.MsgStopReq.Builder> internal__static_cobaya_MsgStopReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgStopRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgStopRsp, global::cobaya.MsgStopRsp.Builder> internal__static_cobaya_MsgStopRsp__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static HisCobaya() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChBoaXNfY29iYXlhLnByb3RvEgZjb2JheWEiYQoLTXNnU3RhcnRSZXESEgoK" + 
          "Y2hlY2tfaG9zdBgBIAIoCRISCgp1bmlxdWVfbnVtGAIgAigNEhIKCmd1ZXN0" + 
          "X25hbWUYAyABKAkSFgoOcmVnaXN0ZXJfaXRlbXMYBCABKAkiHQoLTXNnU3Rh" + 
          "cnRSc3ASDgoGc3RhdHVzGAEgASgNIiAKCk1zZ1N0b3BSZXESEgoKdW5pcXVl" + 
          "X251bRgBIAIoDSIcCgpNc2dTdG9wUnNwEg4KBnN0YXR1cxgBIAEoDTJ3CgpS" + 
          "cGNTZXJ2aWNlEjUKCVN0YXJ0RmxvdxITLmNvYmF5YS5Nc2dTdGFydFJlcRoT" + 
          "LmNvYmF5YS5Nc2dTdGFydFJzcBIyCghTdG9wRmxvdxISLmNvYmF5YS5Nc2dT" + 
          "dG9wUmVxGhIuY29iYXlhLk1zZ1N0b3BSc3BCA4ABAQ==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_cobaya_MsgStartReq__Descriptor = Descriptor.MessageTypes[0];
        internal__static_cobaya_MsgStartReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgStartReq, global::cobaya.MsgStartReq.Builder>(internal__static_cobaya_MsgStartReq__Descriptor,
                new string[] { "CheckHost", "UniqueNum", "GuestName", "RegisterItems", });
        internal__static_cobaya_MsgStartRsp__Descriptor = Descriptor.MessageTypes[1];
        internal__static_cobaya_MsgStartRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgStartRsp, global::cobaya.MsgStartRsp.Builder>(internal__static_cobaya_MsgStartRsp__Descriptor,
                new string[] { "Status", });
        internal__static_cobaya_MsgStopReq__Descriptor = Descriptor.MessageTypes[2];
        internal__static_cobaya_MsgStopReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgStopReq, global::cobaya.MsgStopReq.Builder>(internal__static_cobaya_MsgStopReq__Descriptor,
                new string[] { "UniqueNum", });
        internal__static_cobaya_MsgStopRsp__Descriptor = Descriptor.MessageTypes[3];
        internal__static_cobaya_MsgStopRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgStopRsp, global::cobaya.MsgStopRsp.Builder>(internal__static_cobaya_MsgStopRsp__Descriptor,
                new string[] { "Status", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgStartReq : pb::GeneratedMessage<MsgStartReq, MsgStartReq.Builder> {
    private MsgStartReq() { }
    private static readonly MsgStartReq defaultInstance = new MsgStartReq().MakeReadOnly();
    private static readonly string[] _msgStartReqFieldNames = new string[] { "check_host", "guest_name", "register_items", "unique_num" };
    private static readonly uint[] _msgStartReqFieldTags = new uint[] { 10, 26, 34, 16 };
    public static MsgStartReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgStartReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgStartReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.HisCobaya.internal__static_cobaya_MsgStartReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgStartReq, MsgStartReq.Builder> InternalFieldAccessors {
      get { return global::cobaya.HisCobaya.internal__static_cobaya_MsgStartReq__FieldAccessorTable; }
    }
    
    public const int CheckHostFieldNumber = 1;
    private bool hasCheckHost;
    private string checkHost_ = "";
    public bool HasCheckHost {
      get { return hasCheckHost; }
    }
    public string CheckHost {
      get { return checkHost_; }
    }
    
    public const int UniqueNumFieldNumber = 2;
    private bool hasUniqueNum;
    private uint uniqueNum_;
    public bool HasUniqueNum {
      get { return hasUniqueNum; }
    }
    [global::System.CLSCompliant(false)]
    public uint UniqueNum {
      get { return uniqueNum_; }
    }
    
    public const int GuestNameFieldNumber = 3;
    private bool hasGuestName;
    private string guestName_ = "";
    public bool HasGuestName {
      get { return hasGuestName; }
    }
    public string GuestName {
      get { return guestName_; }
    }
    
    public const int RegisterItemsFieldNumber = 4;
    private bool hasRegisterItems;
    private string registerItems_ = "";
    public bool HasRegisterItems {
      get { return hasRegisterItems; }
    }
    public string RegisterItems {
      get { return registerItems_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCheckHost) return false;
        if (!hasUniqueNum) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgStartReqFieldNames;
      if (hasCheckHost) {
        output.WriteString(1, field_names[0], CheckHost);
      }
      if (hasUniqueNum) {
        output.WriteUInt32(2, field_names[3], UniqueNum);
      }
      if (hasGuestName) {
        output.WriteString(3, field_names[1], GuestName);
      }
      if (hasRegisterItems) {
        output.WriteString(4, field_names[2], RegisterItems);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCheckHost) {
          size += pb::CodedOutputStream.ComputeStringSize(1, CheckHost);
        }
        if (hasUniqueNum) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, UniqueNum);
        }
        if (hasGuestName) {
          size += pb::CodedOutputStream.ComputeStringSize(3, GuestName);
        }
        if (hasRegisterItems) {
          size += pb::CodedOutputStream.ComputeStringSize(4, RegisterItems);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgStartReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgStartReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgStartReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgStartReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgStartReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgStartReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgStartReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgStartReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgStartReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgStartReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgStartReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgStartReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgStartReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgStartReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgStartReq result;
      
      private MsgStartReq PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgStartReq original = result;
          result = new MsgStartReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgStartReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgStartReq.Descriptor; }
      }
      
      public override MsgStartReq DefaultInstanceForType {
        get { return global::cobaya.MsgStartReq.DefaultInstance; }
      }
      
      public override MsgStartReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgStartReq) {
          return MergeFrom((MsgStartReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgStartReq other) {
        if (other == global::cobaya.MsgStartReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCheckHost) {
          CheckHost = other.CheckHost;
        }
        if (other.HasUniqueNum) {
          UniqueNum = other.UniqueNum;
        }
        if (other.HasGuestName) {
          GuestName = other.GuestName;
        }
        if (other.HasRegisterItems) {
          RegisterItems = other.RegisterItems;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgStartReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgStartReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCheckHost = input.ReadString(ref result.checkHost_);
              break;
            }
            case 16: {
              result.hasUniqueNum = input.ReadUInt32(ref result.uniqueNum_);
              break;
            }
            case 26: {
              result.hasGuestName = input.ReadString(ref result.guestName_);
              break;
            }
            case 34: {
              result.hasRegisterItems = input.ReadString(ref result.registerItems_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCheckHost {
        get { return result.hasCheckHost; }
      }
      public string CheckHost {
        get { return result.CheckHost; }
        set { SetCheckHost(value); }
      }
      public Builder SetCheckHost(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCheckHost = true;
        result.checkHost_ = value;
        return this;
      }
      public Builder ClearCheckHost() {
        PrepareBuilder();
        result.hasCheckHost = false;
        result.checkHost_ = "";
        return this;
      }
      
      public bool HasUniqueNum {
        get { return result.hasUniqueNum; }
      }
      [global::System.CLSCompliant(false)]
      public uint UniqueNum {
        get { return result.UniqueNum; }
        set { SetUniqueNum(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetUniqueNum(uint value) {
        PrepareBuilder();
        result.hasUniqueNum = true;
        result.uniqueNum_ = value;
        return this;
      }
      public Builder ClearUniqueNum() {
        PrepareBuilder();
        result.hasUniqueNum = false;
        result.uniqueNum_ = 0;
        return this;
      }
      
      public bool HasGuestName {
        get { return result.hasGuestName; }
      }
      public string GuestName {
        get { return result.GuestName; }
        set { SetGuestName(value); }
      }
      public Builder SetGuestName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGuestName = true;
        result.guestName_ = value;
        return this;
      }
      public Builder ClearGuestName() {
        PrepareBuilder();
        result.hasGuestName = false;
        result.guestName_ = "";
        return this;
      }
      
      public bool HasRegisterItems {
        get { return result.hasRegisterItems; }
      }
      public string RegisterItems {
        get { return result.RegisterItems; }
        set { SetRegisterItems(value); }
      }
      public Builder SetRegisterItems(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRegisterItems = true;
        result.registerItems_ = value;
        return this;
      }
      public Builder ClearRegisterItems() {
        PrepareBuilder();
        result.hasRegisterItems = false;
        result.registerItems_ = "";
        return this;
      }
    }
    static MsgStartReq() {
      object.ReferenceEquals(global::cobaya.HisCobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgStartRsp : pb::GeneratedMessage<MsgStartRsp, MsgStartRsp.Builder> {
    private MsgStartRsp() { }
    private static readonly MsgStartRsp defaultInstance = new MsgStartRsp().MakeReadOnly();
    private static readonly string[] _msgStartRspFieldNames = new string[] { "status" };
    private static readonly uint[] _msgStartRspFieldTags = new uint[] { 8 };
    public static MsgStartRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgStartRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgStartRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.HisCobaya.internal__static_cobaya_MsgStartRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgStartRsp, MsgStartRsp.Builder> InternalFieldAccessors {
      get { return global::cobaya.HisCobaya.internal__static_cobaya_MsgStartRsp__FieldAccessorTable; }
    }
    
    public const int StatusFieldNumber = 1;
    private bool hasStatus;
    private uint status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    [global::System.CLSCompliant(false)]
    public uint Status {
      get { return status_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgStartRspFieldNames;
      if (hasStatus) {
        output.WriteUInt32(1, field_names[0], Status);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, Status);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgStartRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgStartRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgStartRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgStartRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgStartRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgStartRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgStartRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgStartRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgStartRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgStartRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgStartRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgStartRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgStartRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgStartRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgStartRsp result;
      
      private MsgStartRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgStartRsp original = result;
          result = new MsgStartRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgStartRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgStartRsp.Descriptor; }
      }
      
      public override MsgStartRsp DefaultInstanceForType {
        get { return global::cobaya.MsgStartRsp.DefaultInstance; }
      }
      
      public override MsgStartRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgStartRsp) {
          return MergeFrom((MsgStartRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgStartRsp other) {
        if (other == global::cobaya.MsgStartRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStatus) {
          Status = other.Status;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgStartRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgStartRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasStatus = input.ReadUInt32(ref result.status_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      [global::System.CLSCompliant(false)]
      public uint Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetStatus(uint value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
    }
    static MsgStartRsp() {
      object.ReferenceEquals(global::cobaya.HisCobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgStopReq : pb::GeneratedMessage<MsgStopReq, MsgStopReq.Builder> {
    private MsgStopReq() { }
    private static readonly MsgStopReq defaultInstance = new MsgStopReq().MakeReadOnly();
    private static readonly string[] _msgStopReqFieldNames = new string[] { "unique_num" };
    private static readonly uint[] _msgStopReqFieldTags = new uint[] { 8 };
    public static MsgStopReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgStopReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgStopReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.HisCobaya.internal__static_cobaya_MsgStopReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgStopReq, MsgStopReq.Builder> InternalFieldAccessors {
      get { return global::cobaya.HisCobaya.internal__static_cobaya_MsgStopReq__FieldAccessorTable; }
    }
    
    public const int UniqueNumFieldNumber = 1;
    private bool hasUniqueNum;
    private uint uniqueNum_;
    public bool HasUniqueNum {
      get { return hasUniqueNum; }
    }
    [global::System.CLSCompliant(false)]
    public uint UniqueNum {
      get { return uniqueNum_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUniqueNum) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgStopReqFieldNames;
      if (hasUniqueNum) {
        output.WriteUInt32(1, field_names[0], UniqueNum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUniqueNum) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, UniqueNum);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgStopReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgStopReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgStopReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgStopReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgStopReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgStopReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgStopReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgStopReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgStopReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgStopReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgStopReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgStopReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgStopReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgStopReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgStopReq result;
      
      private MsgStopReq PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgStopReq original = result;
          result = new MsgStopReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgStopReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgStopReq.Descriptor; }
      }
      
      public override MsgStopReq DefaultInstanceForType {
        get { return global::cobaya.MsgStopReq.DefaultInstance; }
      }
      
      public override MsgStopReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgStopReq) {
          return MergeFrom((MsgStopReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgStopReq other) {
        if (other == global::cobaya.MsgStopReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUniqueNum) {
          UniqueNum = other.UniqueNum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgStopReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgStopReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUniqueNum = input.ReadUInt32(ref result.uniqueNum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUniqueNum {
        get { return result.hasUniqueNum; }
      }
      [global::System.CLSCompliant(false)]
      public uint UniqueNum {
        get { return result.UniqueNum; }
        set { SetUniqueNum(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetUniqueNum(uint value) {
        PrepareBuilder();
        result.hasUniqueNum = true;
        result.uniqueNum_ = value;
        return this;
      }
      public Builder ClearUniqueNum() {
        PrepareBuilder();
        result.hasUniqueNum = false;
        result.uniqueNum_ = 0;
        return this;
      }
    }
    static MsgStopReq() {
      object.ReferenceEquals(global::cobaya.HisCobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgStopRsp : pb::GeneratedMessage<MsgStopRsp, MsgStopRsp.Builder> {
    private MsgStopRsp() { }
    private static readonly MsgStopRsp defaultInstance = new MsgStopRsp().MakeReadOnly();
    private static readonly string[] _msgStopRspFieldNames = new string[] { "status" };
    private static readonly uint[] _msgStopRspFieldTags = new uint[] { 8 };
    public static MsgStopRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgStopRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgStopRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.HisCobaya.internal__static_cobaya_MsgStopRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgStopRsp, MsgStopRsp.Builder> InternalFieldAccessors {
      get { return global::cobaya.HisCobaya.internal__static_cobaya_MsgStopRsp__FieldAccessorTable; }
    }
    
    public const int StatusFieldNumber = 1;
    private bool hasStatus;
    private uint status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    [global::System.CLSCompliant(false)]
    public uint Status {
      get { return status_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgStopRspFieldNames;
      if (hasStatus) {
        output.WriteUInt32(1, field_names[0], Status);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, Status);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgStopRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgStopRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgStopRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgStopRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgStopRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgStopRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgStopRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgStopRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgStopRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgStopRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgStopRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgStopRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgStopRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgStopRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgStopRsp result;
      
      private MsgStopRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgStopRsp original = result;
          result = new MsgStopRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgStopRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgStopRsp.Descriptor; }
      }
      
      public override MsgStopRsp DefaultInstanceForType {
        get { return global::cobaya.MsgStopRsp.DefaultInstance; }
      }
      
      public override MsgStopRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgStopRsp) {
          return MergeFrom((MsgStopRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgStopRsp other) {
        if (other == global::cobaya.MsgStopRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStatus) {
          Status = other.Status;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgStopRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgStopRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasStatus = input.ReadUInt32(ref result.status_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      [global::System.CLSCompliant(false)]
      public uint Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetStatus(uint value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
    }
    static MsgStopRsp() {
      object.ReferenceEquals(global::cobaya.HisCobaya.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class RpcService : pb::IService {
    public abstract void StartFlow(
        pb::IRpcController controller,
        global::cobaya.MsgStartReq request,
        global::System.Action<global::cobaya.MsgStartRsp> done);
    public abstract void StopFlow(
        pb::IRpcController controller,
        global::cobaya.MsgStopReq request,
        global::System.Action<global::cobaya.MsgStopRsp> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return HisCobaya.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.StartFlow(controller, (global::cobaya.MsgStartReq) request,
              pb::RpcUtil.SpecializeCallback<global::cobaya.MsgStartRsp>(
              done));
          return;
        case 1:
          this.StopFlow(controller, (global::cobaya.MsgStopReq) request,
              pb::RpcUtil.SpecializeCallback<global::cobaya.MsgStopRsp>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::cobaya.MsgStartReq.DefaultInstance;
        case 1:
          return global::cobaya.MsgStopReq.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::cobaya.MsgStartRsp.DefaultInstance;
        case 1:
          return global::cobaya.MsgStopRsp.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::cobaya.RpcService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void StartFlow(
          pb::IRpcController controller,
          global::cobaya.MsgStartReq request,
          global::System.Action<global::cobaya.MsgStartRsp> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::cobaya.MsgStartRsp.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::cobaya.MsgStartRsp, global::cobaya.MsgStartRsp.Builder>(done, global::cobaya.MsgStartRsp.DefaultInstance));
      }
      
      public override void StopFlow(
          pb::IRpcController controller,
          global::cobaya.MsgStopReq request,
          global::System.Action<global::cobaya.MsgStopRsp> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::cobaya.MsgStopRsp.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::cobaya.MsgStopRsp, global::cobaya.MsgStopRsp.Builder>(done, global::cobaya.MsgStopRsp.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
