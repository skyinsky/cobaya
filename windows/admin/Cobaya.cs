// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace cobaya {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class Cobaya {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgAdminReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgAdminReq, global::cobaya.MsgAdminReq.Builder> internal__static_cobaya_MsgAdminReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgAdminRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgAdminRsp, global::cobaya.MsgAdminRsp.Builder> internal__static_cobaya_MsgAdminRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgMonitorReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgMonitorReq, global::cobaya.MsgMonitorReq.Builder> internal__static_cobaya_MsgMonitorReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgMonitorRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgMonitorRsp, global::cobaya.MsgMonitorRsp.Builder> internal__static_cobaya_MsgMonitorRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgLoginReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgLoginReq, global::cobaya.MsgLoginReq.Builder> internal__static_cobaya_MsgLoginReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgLoginRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgLoginRsp, global::cobaya.MsgLoginRsp.Builder> internal__static_cobaya_MsgLoginRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgLogoutReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgLogoutReq, global::cobaya.MsgLogoutReq.Builder> internal__static_cobaya_MsgLogoutReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgLogoutRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgLogoutRsp, global::cobaya.MsgLogoutRsp.Builder> internal__static_cobaya_MsgLogoutRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgUpdateUserReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgUpdateUserReq, global::cobaya.MsgUpdateUserReq.Builder> internal__static_cobaya_MsgUpdateUserReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgUpdateUserRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgUpdateUserRsp, global::cobaya.MsgUpdateUserRsp.Builder> internal__static_cobaya_MsgUpdateUserRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgClientReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgClientReq, global::cobaya.MsgClientReq.Builder> internal__static_cobaya_MsgClientReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgClientRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgClientRsp, global::cobaya.MsgClientRsp.Builder> internal__static_cobaya_MsgClientRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgFetchFlowReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgFetchFlowReq, global::cobaya.MsgFetchFlowReq.Builder> internal__static_cobaya_MsgFetchFlowReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_UserFlow__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.UserFlow, global::cobaya.UserFlow.Builder> internal__static_cobaya_UserFlow__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgFetchFlowRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgFetchFlowRsp, global::cobaya.MsgFetchFlowRsp.Builder> internal__static_cobaya_MsgFetchFlowRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgCheckFlowReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgCheckFlowReq, global::cobaya.MsgCheckFlowReq.Builder> internal__static_cobaya_MsgCheckFlowReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgCheckFlowRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgCheckFlowRsp, global::cobaya.MsgCheckFlowRsp.Builder> internal__static_cobaya_MsgCheckFlowRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgFriendFlowReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgFriendFlowReq, global::cobaya.MsgFriendFlowReq.Builder> internal__static_cobaya_MsgFriendFlowReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgFriendFlowRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgFriendFlowRsp, global::cobaya.MsgFriendFlowRsp.Builder> internal__static_cobaya_MsgFriendFlowRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgAheadFlowReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgAheadFlowReq, global::cobaya.MsgAheadFlowReq.Builder> internal__static_cobaya_MsgAheadFlowReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgAheadFlowRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgAheadFlowRsp, global::cobaya.MsgAheadFlowRsp.Builder> internal__static_cobaya_MsgAheadFlowRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgOrgFlowReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgOrgFlowReq, global::cobaya.MsgOrgFlowReq.Builder> internal__static_cobaya_MsgOrgFlowReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_cobaya_MsgOrgFlowRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgOrgFlowRsp, global::cobaya.MsgOrgFlowRsp.Builder> internal__static_cobaya_MsgOrgFlowRsp__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Cobaya() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Cgxjb2JheWEucHJvdG8SBmNvYmF5YSIaCgtNc2dBZG1pblJlcRILCgNrZXkY" + 
          "ASACKAkiQwoLTXNnQWRtaW5Sc3ASCgoCaXAYASACKAkSDAoEdXNlchgCIAIo" + 
          "CRIOCgZwYXNzd2QYAyACKAkSCgoCZGIYBCACKAkiKwoNTXNnTW9uaXRvclJl" + 
          "cRILCgNrZXkYASACKAkSDQoFc3RhcnQYAiACKAgiHwoNTXNnTW9uaXRvclJz" + 
          "cBIOCgZzdGF0dXMYASACKAgiOQoLTXNnTG9naW5SZXESDAoEaG9zdBgBIAIo" + 
          "CRIMCgR1c2VyGAIgAigJEg4KBnBhc3N3ZBgDIAIoCSIcCgtNc2dMb2dpblJz" + 
          "cBINCgVncmFudBgBIAIoCCIqCgxNc2dMb2dvdXRSZXESDAoEaG9zdBgBIAIo" + 
          "CRIMCgR1c2VyGAIgAigJIh0KDE1zZ0xvZ291dFJzcBINCgVncmFudBgBIAEo" + 
          "CCI+ChBNc2dVcGRhdGVVc2VyUmVxEgwKBGhvc3QYASACKAkSDAoEdXNlchgC" + 
          "IAIoCRIOCgZwYXNzd2QYAyACKAkiIQoQTXNnVXBkYXRlVXNlclJzcBINCgVn" + 
          "cmFudBgBIAIoCCIdCgxNc2dDbGllbnRSZXESDQoFaG9zdHMYASADKAkiPQoM" + 
          "TXNnQ2xpZW50UnNwEgwKBGhvc3QYASACKAkSEAoIZGV2X2NvZGUYAiACKAkS" + 
          "DQoFZmV0Y2gYAyACKA0iIwoPTXNnRmV0Y2hGbG93UmVxEhAKCGRldl9jb2Rl" + 
          "GAEgAigJImoKCFVzZXJGbG93Eg8KB3VzZXJfaWQYASACKAQSEAoIYXBwbHlf" + 
          "aWQYAiACKAkSDAoEdXNlchgDIAIoCRIOCgZvZmZpY2UYBCACKAkSDgoGZG9j" + 
          "dG9yGAUgAigJEg0KBWl0ZW1zGAYgAygJIjIKD01zZ0ZldGNoRmxvd1JzcBIf" + 
          "CgVmbG93cxgBIAMoCzIQLmNvYmF5YS5Vc2VyRmxvdyJcCg9Nc2dDaGVja0Zs" + 
          "b3dSZXESDAoEaG9zdBgBIAIoCRIQCghkZXZfY29kZRgCIAIoCRIMCgR1c2Vy" + 
          "GAMgAigJEgoKAmlkGAQgAigEEg8KB3ByZXZfaWQYBSABKAQiIAoPTXNnQ2hl" + 
          "Y2tGbG93UnNwEg0KBWdyYW50GAEgASgIIkAKEE1zZ0ZyaWVuZEZsb3dSZXES" + 
          "DAoEaG9zdBgBIAIoCRIQCghkZXZfY29kZRgCIAIoCRIMCgRpbmZvGAMgAigJ" + 
          "IiEKEE1zZ0ZyaWVuZEZsb3dSc3ASDQoFZ3JhbnQYASABKAgiPwoPTXNnQWhl" + 
          "YWRGbG93UmVxEgwKBGhvc3QYASACKAkSEAoIZGV2X2NvZGUYAiACKAkSDAoE" + 
          "aW5mbxgDIAIoCSIgCg9Nc2dBaGVhZEZsb3dSc3ASDQoFZ3JhbnQYASABKAgi" + 
          "HQoNTXNnT3JnRmxvd1JlcRIMCgRpbmZvGAEgAigJIh8KDU1zZ09yZ0Zsb3dS" + 
          "c3ASDgoGc3RhdHVzGAEgASgNMrQFCgpScGNTZXJ2aWNlEjgKDEdldEFkbWlu" + 
          "SW5mbxITLmNvYmF5YS5Nc2dBZG1pblJlcRoTLmNvYmF5YS5Nc2dBZG1pblJz" + 
          "cBI9Cg1Db250cm9sU3lzdGVtEhUuY29iYXlhLk1zZ01vbml0b3JSZXEaFS5j" + 
          "b2JheWEuTXNnTW9uaXRvclJzcBI3CgtMb2dpblN5c3RlbRITLmNvYmF5YS5N" + 
          "c2dMb2dpblJlcRoTLmNvYmF5YS5Nc2dMb2dpblJzcBI6CgxMb2dvdXRTeXN0" + 
          "ZW0SFC5jb2JheWEuTXNnTG9nb3V0UmVxGhQuY29iYXlhLk1zZ0xvZ291dFJz" + 
          "cBJACgpVcGRhdGVVc2VyEhguY29iYXlhLk1zZ1VwZGF0ZVVzZXJSZXEaGC5j" + 
          "b2JheWEuTXNnVXBkYXRlVXNlclJzcBI7Cg1HZXRDbGllbnRJbmZvEhQuY29i" + 
          "YXlhLk1zZ0NsaWVudFJlcRoULmNvYmF5YS5Nc2dDbGllbnRSc3ASPQoJRmV0" + 
          "Y2hGbG93EhcuY29iYXlhLk1zZ0ZldGNoRmxvd1JlcRoXLmNvYmF5YS5Nc2dG" + 
          "ZXRjaEZsb3dSc3ASPQoJQ2hlY2tGbG93EhcuY29iYXlhLk1zZ0NoZWNrRmxv" + 
          "d1JlcRoXLmNvYmF5YS5Nc2dDaGVja0Zsb3dSc3ASQAoKRnJpZW5kRmxvdxIY" + 
          "LmNvYmF5YS5Nc2dGcmllbmRGbG93UmVxGhguY29iYXlhLk1zZ0ZyaWVuZEZs" + 
          "b3dSc3ASPQoJQWhlYWRGbG93EhcuY29iYXlhLk1zZ0FoZWFkRmxvd1JlcRoX" + 
          "LmNvYmF5YS5Nc2dBaGVhZEZsb3dSc3ASOgoKU2V0T3JnRmxvdxIVLmNvYmF5" + 
          "YS5Nc2dPcmdGbG93UmVxGhUuY29iYXlhLk1zZ09yZ0Zsb3dSc3BCA4ABAQ==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_cobaya_MsgAdminReq__Descriptor = Descriptor.MessageTypes[0];
        internal__static_cobaya_MsgAdminReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgAdminReq, global::cobaya.MsgAdminReq.Builder>(internal__static_cobaya_MsgAdminReq__Descriptor,
                new string[] { "Key", });
        internal__static_cobaya_MsgAdminRsp__Descriptor = Descriptor.MessageTypes[1];
        internal__static_cobaya_MsgAdminRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgAdminRsp, global::cobaya.MsgAdminRsp.Builder>(internal__static_cobaya_MsgAdminRsp__Descriptor,
                new string[] { "Ip", "User", "Passwd", "Db", });
        internal__static_cobaya_MsgMonitorReq__Descriptor = Descriptor.MessageTypes[2];
        internal__static_cobaya_MsgMonitorReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgMonitorReq, global::cobaya.MsgMonitorReq.Builder>(internal__static_cobaya_MsgMonitorReq__Descriptor,
                new string[] { "Key", "Start", });
        internal__static_cobaya_MsgMonitorRsp__Descriptor = Descriptor.MessageTypes[3];
        internal__static_cobaya_MsgMonitorRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgMonitorRsp, global::cobaya.MsgMonitorRsp.Builder>(internal__static_cobaya_MsgMonitorRsp__Descriptor,
                new string[] { "Status", });
        internal__static_cobaya_MsgLoginReq__Descriptor = Descriptor.MessageTypes[4];
        internal__static_cobaya_MsgLoginReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgLoginReq, global::cobaya.MsgLoginReq.Builder>(internal__static_cobaya_MsgLoginReq__Descriptor,
                new string[] { "Host", "User", "Passwd", });
        internal__static_cobaya_MsgLoginRsp__Descriptor = Descriptor.MessageTypes[5];
        internal__static_cobaya_MsgLoginRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgLoginRsp, global::cobaya.MsgLoginRsp.Builder>(internal__static_cobaya_MsgLoginRsp__Descriptor,
                new string[] { "Grant", });
        internal__static_cobaya_MsgLogoutReq__Descriptor = Descriptor.MessageTypes[6];
        internal__static_cobaya_MsgLogoutReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgLogoutReq, global::cobaya.MsgLogoutReq.Builder>(internal__static_cobaya_MsgLogoutReq__Descriptor,
                new string[] { "Host", "User", });
        internal__static_cobaya_MsgLogoutRsp__Descriptor = Descriptor.MessageTypes[7];
        internal__static_cobaya_MsgLogoutRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgLogoutRsp, global::cobaya.MsgLogoutRsp.Builder>(internal__static_cobaya_MsgLogoutRsp__Descriptor,
                new string[] { "Grant", });
        internal__static_cobaya_MsgUpdateUserReq__Descriptor = Descriptor.MessageTypes[8];
        internal__static_cobaya_MsgUpdateUserReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgUpdateUserReq, global::cobaya.MsgUpdateUserReq.Builder>(internal__static_cobaya_MsgUpdateUserReq__Descriptor,
                new string[] { "Host", "User", "Passwd", });
        internal__static_cobaya_MsgUpdateUserRsp__Descriptor = Descriptor.MessageTypes[9];
        internal__static_cobaya_MsgUpdateUserRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgUpdateUserRsp, global::cobaya.MsgUpdateUserRsp.Builder>(internal__static_cobaya_MsgUpdateUserRsp__Descriptor,
                new string[] { "Grant", });
        internal__static_cobaya_MsgClientReq__Descriptor = Descriptor.MessageTypes[10];
        internal__static_cobaya_MsgClientReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgClientReq, global::cobaya.MsgClientReq.Builder>(internal__static_cobaya_MsgClientReq__Descriptor,
                new string[] { "Hosts", });
        internal__static_cobaya_MsgClientRsp__Descriptor = Descriptor.MessageTypes[11];
        internal__static_cobaya_MsgClientRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgClientRsp, global::cobaya.MsgClientRsp.Builder>(internal__static_cobaya_MsgClientRsp__Descriptor,
                new string[] { "Host", "DevCode", "Fetch", });
        internal__static_cobaya_MsgFetchFlowReq__Descriptor = Descriptor.MessageTypes[12];
        internal__static_cobaya_MsgFetchFlowReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgFetchFlowReq, global::cobaya.MsgFetchFlowReq.Builder>(internal__static_cobaya_MsgFetchFlowReq__Descriptor,
                new string[] { "DevCode", });
        internal__static_cobaya_UserFlow__Descriptor = Descriptor.MessageTypes[13];
        internal__static_cobaya_UserFlow__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.UserFlow, global::cobaya.UserFlow.Builder>(internal__static_cobaya_UserFlow__Descriptor,
                new string[] { "UserId", "ApplyId", "User", "Office", "Doctor", "Items", });
        internal__static_cobaya_MsgFetchFlowRsp__Descriptor = Descriptor.MessageTypes[14];
        internal__static_cobaya_MsgFetchFlowRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgFetchFlowRsp, global::cobaya.MsgFetchFlowRsp.Builder>(internal__static_cobaya_MsgFetchFlowRsp__Descriptor,
                new string[] { "Flows", });
        internal__static_cobaya_MsgCheckFlowReq__Descriptor = Descriptor.MessageTypes[15];
        internal__static_cobaya_MsgCheckFlowReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgCheckFlowReq, global::cobaya.MsgCheckFlowReq.Builder>(internal__static_cobaya_MsgCheckFlowReq__Descriptor,
                new string[] { "Host", "DevCode", "User", "Id", "PrevId", });
        internal__static_cobaya_MsgCheckFlowRsp__Descriptor = Descriptor.MessageTypes[16];
        internal__static_cobaya_MsgCheckFlowRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgCheckFlowRsp, global::cobaya.MsgCheckFlowRsp.Builder>(internal__static_cobaya_MsgCheckFlowRsp__Descriptor,
                new string[] { "Grant", });
        internal__static_cobaya_MsgFriendFlowReq__Descriptor = Descriptor.MessageTypes[17];
        internal__static_cobaya_MsgFriendFlowReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgFriendFlowReq, global::cobaya.MsgFriendFlowReq.Builder>(internal__static_cobaya_MsgFriendFlowReq__Descriptor,
                new string[] { "Host", "DevCode", "Info", });
        internal__static_cobaya_MsgFriendFlowRsp__Descriptor = Descriptor.MessageTypes[18];
        internal__static_cobaya_MsgFriendFlowRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgFriendFlowRsp, global::cobaya.MsgFriendFlowRsp.Builder>(internal__static_cobaya_MsgFriendFlowRsp__Descriptor,
                new string[] { "Grant", });
        internal__static_cobaya_MsgAheadFlowReq__Descriptor = Descriptor.MessageTypes[19];
        internal__static_cobaya_MsgAheadFlowReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgAheadFlowReq, global::cobaya.MsgAheadFlowReq.Builder>(internal__static_cobaya_MsgAheadFlowReq__Descriptor,
                new string[] { "Host", "DevCode", "Info", });
        internal__static_cobaya_MsgAheadFlowRsp__Descriptor = Descriptor.MessageTypes[20];
        internal__static_cobaya_MsgAheadFlowRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgAheadFlowRsp, global::cobaya.MsgAheadFlowRsp.Builder>(internal__static_cobaya_MsgAheadFlowRsp__Descriptor,
                new string[] { "Grant", });
        internal__static_cobaya_MsgOrgFlowReq__Descriptor = Descriptor.MessageTypes[21];
        internal__static_cobaya_MsgOrgFlowReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgOrgFlowReq, global::cobaya.MsgOrgFlowReq.Builder>(internal__static_cobaya_MsgOrgFlowReq__Descriptor,
                new string[] { "Info", });
        internal__static_cobaya_MsgOrgFlowRsp__Descriptor = Descriptor.MessageTypes[22];
        internal__static_cobaya_MsgOrgFlowRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::cobaya.MsgOrgFlowRsp, global::cobaya.MsgOrgFlowRsp.Builder>(internal__static_cobaya_MsgOrgFlowRsp__Descriptor,
                new string[] { "Status", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgAdminReq : pb::GeneratedMessage<MsgAdminReq, MsgAdminReq.Builder> {
    private MsgAdminReq() { }
    private static readonly MsgAdminReq defaultInstance = new MsgAdminReq().MakeReadOnly();
    private static readonly string[] _msgAdminReqFieldNames = new string[] { "key" };
    private static readonly uint[] _msgAdminReqFieldTags = new uint[] { 10 };
    public static MsgAdminReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgAdminReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgAdminReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgAdminReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgAdminReq, MsgAdminReq.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgAdminReq__FieldAccessorTable; }
    }
    
    public const int KeyFieldNumber = 1;
    private bool hasKey;
    private string key_ = "";
    public bool HasKey {
      get { return hasKey; }
    }
    public string Key {
      get { return key_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasKey) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgAdminReqFieldNames;
      if (hasKey) {
        output.WriteString(1, field_names[0], Key);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasKey) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Key);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgAdminReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgAdminReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgAdminReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgAdminReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgAdminReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgAdminReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgAdminReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgAdminReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgAdminReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgAdminReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgAdminReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgAdminReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgAdminReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgAdminReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgAdminReq result;
      
      private MsgAdminReq PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgAdminReq original = result;
          result = new MsgAdminReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgAdminReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgAdminReq.Descriptor; }
      }
      
      public override MsgAdminReq DefaultInstanceForType {
        get { return global::cobaya.MsgAdminReq.DefaultInstance; }
      }
      
      public override MsgAdminReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgAdminReq) {
          return MergeFrom((MsgAdminReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgAdminReq other) {
        if (other == global::cobaya.MsgAdminReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasKey) {
          Key = other.Key;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgAdminReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgAdminReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasKey = input.ReadString(ref result.key_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasKey {
        get { return result.hasKey; }
      }
      public string Key {
        get { return result.Key; }
        set { SetKey(value); }
      }
      public Builder SetKey(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.hasKey = false;
        result.key_ = "";
        return this;
      }
    }
    static MsgAdminReq() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgAdminRsp : pb::GeneratedMessage<MsgAdminRsp, MsgAdminRsp.Builder> {
    private MsgAdminRsp() { }
    private static readonly MsgAdminRsp defaultInstance = new MsgAdminRsp().MakeReadOnly();
    private static readonly string[] _msgAdminRspFieldNames = new string[] { "db", "ip", "passwd", "user" };
    private static readonly uint[] _msgAdminRspFieldTags = new uint[] { 34, 10, 26, 18 };
    public static MsgAdminRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgAdminRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgAdminRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgAdminRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgAdminRsp, MsgAdminRsp.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgAdminRsp__FieldAccessorTable; }
    }
    
    public const int IpFieldNumber = 1;
    private bool hasIp;
    private string ip_ = "";
    public bool HasIp {
      get { return hasIp; }
    }
    public string Ip {
      get { return ip_; }
    }
    
    public const int UserFieldNumber = 2;
    private bool hasUser;
    private string user_ = "";
    public bool HasUser {
      get { return hasUser; }
    }
    public string User {
      get { return user_; }
    }
    
    public const int PasswdFieldNumber = 3;
    private bool hasPasswd;
    private string passwd_ = "";
    public bool HasPasswd {
      get { return hasPasswd; }
    }
    public string Passwd {
      get { return passwd_; }
    }
    
    public const int DbFieldNumber = 4;
    private bool hasDb;
    private string db_ = "";
    public bool HasDb {
      get { return hasDb; }
    }
    public string Db {
      get { return db_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIp) return false;
        if (!hasUser) return false;
        if (!hasPasswd) return false;
        if (!hasDb) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgAdminRspFieldNames;
      if (hasIp) {
        output.WriteString(1, field_names[1], Ip);
      }
      if (hasUser) {
        output.WriteString(2, field_names[3], User);
      }
      if (hasPasswd) {
        output.WriteString(3, field_names[2], Passwd);
      }
      if (hasDb) {
        output.WriteString(4, field_names[0], Db);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIp) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Ip);
        }
        if (hasUser) {
          size += pb::CodedOutputStream.ComputeStringSize(2, User);
        }
        if (hasPasswd) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Passwd);
        }
        if (hasDb) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Db);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgAdminRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgAdminRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgAdminRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgAdminRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgAdminRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgAdminRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgAdminRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgAdminRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgAdminRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgAdminRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgAdminRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgAdminRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgAdminRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgAdminRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgAdminRsp result;
      
      private MsgAdminRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgAdminRsp original = result;
          result = new MsgAdminRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgAdminRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgAdminRsp.Descriptor; }
      }
      
      public override MsgAdminRsp DefaultInstanceForType {
        get { return global::cobaya.MsgAdminRsp.DefaultInstance; }
      }
      
      public override MsgAdminRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgAdminRsp) {
          return MergeFrom((MsgAdminRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgAdminRsp other) {
        if (other == global::cobaya.MsgAdminRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIp) {
          Ip = other.Ip;
        }
        if (other.HasUser) {
          User = other.User;
        }
        if (other.HasPasswd) {
          Passwd = other.Passwd;
        }
        if (other.HasDb) {
          Db = other.Db;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgAdminRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgAdminRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasIp = input.ReadString(ref result.ip_);
              break;
            }
            case 18: {
              result.hasUser = input.ReadString(ref result.user_);
              break;
            }
            case 26: {
              result.hasPasswd = input.ReadString(ref result.passwd_);
              break;
            }
            case 34: {
              result.hasDb = input.ReadString(ref result.db_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIp {
        get { return result.hasIp; }
      }
      public string Ip {
        get { return result.Ip; }
        set { SetIp(value); }
      }
      public Builder SetIp(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIp = true;
        result.ip_ = value;
        return this;
      }
      public Builder ClearIp() {
        PrepareBuilder();
        result.hasIp = false;
        result.ip_ = "";
        return this;
      }
      
      public bool HasUser {
        get { return result.hasUser; }
      }
      public string User {
        get { return result.User; }
        set { SetUser(value); }
      }
      public Builder SetUser(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = value;
        return this;
      }
      public Builder ClearUser() {
        PrepareBuilder();
        result.hasUser = false;
        result.user_ = "";
        return this;
      }
      
      public bool HasPasswd {
        get { return result.hasPasswd; }
      }
      public string Passwd {
        get { return result.Passwd; }
        set { SetPasswd(value); }
      }
      public Builder SetPasswd(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPasswd = true;
        result.passwd_ = value;
        return this;
      }
      public Builder ClearPasswd() {
        PrepareBuilder();
        result.hasPasswd = false;
        result.passwd_ = "";
        return this;
      }
      
      public bool HasDb {
        get { return result.hasDb; }
      }
      public string Db {
        get { return result.Db; }
        set { SetDb(value); }
      }
      public Builder SetDb(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDb = true;
        result.db_ = value;
        return this;
      }
      public Builder ClearDb() {
        PrepareBuilder();
        result.hasDb = false;
        result.db_ = "";
        return this;
      }
    }
    static MsgAdminRsp() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgMonitorReq : pb::GeneratedMessage<MsgMonitorReq, MsgMonitorReq.Builder> {
    private MsgMonitorReq() { }
    private static readonly MsgMonitorReq defaultInstance = new MsgMonitorReq().MakeReadOnly();
    private static readonly string[] _msgMonitorReqFieldNames = new string[] { "key", "start" };
    private static readonly uint[] _msgMonitorReqFieldTags = new uint[] { 10, 16 };
    public static MsgMonitorReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgMonitorReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgMonitorReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgMonitorReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgMonitorReq, MsgMonitorReq.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgMonitorReq__FieldAccessorTable; }
    }
    
    public const int KeyFieldNumber = 1;
    private bool hasKey;
    private string key_ = "";
    public bool HasKey {
      get { return hasKey; }
    }
    public string Key {
      get { return key_; }
    }
    
    public const int StartFieldNumber = 2;
    private bool hasStart;
    private bool start_;
    public bool HasStart {
      get { return hasStart; }
    }
    public bool Start {
      get { return start_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasKey) return false;
        if (!hasStart) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgMonitorReqFieldNames;
      if (hasKey) {
        output.WriteString(1, field_names[0], Key);
      }
      if (hasStart) {
        output.WriteBool(2, field_names[1], Start);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasKey) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Key);
        }
        if (hasStart) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, Start);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgMonitorReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgMonitorReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgMonitorReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgMonitorReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgMonitorReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgMonitorReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgMonitorReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgMonitorReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgMonitorReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgMonitorReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgMonitorReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgMonitorReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgMonitorReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgMonitorReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgMonitorReq result;
      
      private MsgMonitorReq PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgMonitorReq original = result;
          result = new MsgMonitorReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgMonitorReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgMonitorReq.Descriptor; }
      }
      
      public override MsgMonitorReq DefaultInstanceForType {
        get { return global::cobaya.MsgMonitorReq.DefaultInstance; }
      }
      
      public override MsgMonitorReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgMonitorReq) {
          return MergeFrom((MsgMonitorReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgMonitorReq other) {
        if (other == global::cobaya.MsgMonitorReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasKey) {
          Key = other.Key;
        }
        if (other.HasStart) {
          Start = other.Start;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgMonitorReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgMonitorReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasKey = input.ReadString(ref result.key_);
              break;
            }
            case 16: {
              result.hasStart = input.ReadBool(ref result.start_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasKey {
        get { return result.hasKey; }
      }
      public string Key {
        get { return result.Key; }
        set { SetKey(value); }
      }
      public Builder SetKey(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.hasKey = false;
        result.key_ = "";
        return this;
      }
      
      public bool HasStart {
        get { return result.hasStart; }
      }
      public bool Start {
        get { return result.Start; }
        set { SetStart(value); }
      }
      public Builder SetStart(bool value) {
        PrepareBuilder();
        result.hasStart = true;
        result.start_ = value;
        return this;
      }
      public Builder ClearStart() {
        PrepareBuilder();
        result.hasStart = false;
        result.start_ = false;
        return this;
      }
    }
    static MsgMonitorReq() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgMonitorRsp : pb::GeneratedMessage<MsgMonitorRsp, MsgMonitorRsp.Builder> {
    private MsgMonitorRsp() { }
    private static readonly MsgMonitorRsp defaultInstance = new MsgMonitorRsp().MakeReadOnly();
    private static readonly string[] _msgMonitorRspFieldNames = new string[] { "status" };
    private static readonly uint[] _msgMonitorRspFieldTags = new uint[] { 8 };
    public static MsgMonitorRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgMonitorRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgMonitorRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgMonitorRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgMonitorRsp, MsgMonitorRsp.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgMonitorRsp__FieldAccessorTable; }
    }
    
    public const int StatusFieldNumber = 1;
    private bool hasStatus;
    private bool status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public bool Status {
      get { return status_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStatus) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgMonitorRspFieldNames;
      if (hasStatus) {
        output.WriteBool(1, field_names[0], Status);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, Status);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgMonitorRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgMonitorRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgMonitorRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgMonitorRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgMonitorRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgMonitorRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgMonitorRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgMonitorRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgMonitorRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgMonitorRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgMonitorRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgMonitorRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgMonitorRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgMonitorRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgMonitorRsp result;
      
      private MsgMonitorRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgMonitorRsp original = result;
          result = new MsgMonitorRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgMonitorRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgMonitorRsp.Descriptor; }
      }
      
      public override MsgMonitorRsp DefaultInstanceForType {
        get { return global::cobaya.MsgMonitorRsp.DefaultInstance; }
      }
      
      public override MsgMonitorRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgMonitorRsp) {
          return MergeFrom((MsgMonitorRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgMonitorRsp other) {
        if (other == global::cobaya.MsgMonitorRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStatus) {
          Status = other.Status;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgMonitorRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgMonitorRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasStatus = input.ReadBool(ref result.status_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      public bool Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(bool value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = false;
        return this;
      }
    }
    static MsgMonitorRsp() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgLoginReq : pb::GeneratedMessage<MsgLoginReq, MsgLoginReq.Builder> {
    private MsgLoginReq() { }
    private static readonly MsgLoginReq defaultInstance = new MsgLoginReq().MakeReadOnly();
    private static readonly string[] _msgLoginReqFieldNames = new string[] { "host", "passwd", "user" };
    private static readonly uint[] _msgLoginReqFieldTags = new uint[] { 10, 26, 18 };
    public static MsgLoginReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgLoginReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgLoginReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgLoginReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgLoginReq, MsgLoginReq.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgLoginReq__FieldAccessorTable; }
    }
    
    public const int HostFieldNumber = 1;
    private bool hasHost;
    private string host_ = "";
    public bool HasHost {
      get { return hasHost; }
    }
    public string Host {
      get { return host_; }
    }
    
    public const int UserFieldNumber = 2;
    private bool hasUser;
    private string user_ = "";
    public bool HasUser {
      get { return hasUser; }
    }
    public string User {
      get { return user_; }
    }
    
    public const int PasswdFieldNumber = 3;
    private bool hasPasswd;
    private string passwd_ = "";
    public bool HasPasswd {
      get { return hasPasswd; }
    }
    public string Passwd {
      get { return passwd_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasHost) return false;
        if (!hasUser) return false;
        if (!hasPasswd) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgLoginReqFieldNames;
      if (hasHost) {
        output.WriteString(1, field_names[0], Host);
      }
      if (hasUser) {
        output.WriteString(2, field_names[2], User);
      }
      if (hasPasswd) {
        output.WriteString(3, field_names[1], Passwd);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasHost) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Host);
        }
        if (hasUser) {
          size += pb::CodedOutputStream.ComputeStringSize(2, User);
        }
        if (hasPasswd) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Passwd);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgLoginReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgLoginReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgLoginReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgLoginReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgLoginReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgLoginReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgLoginReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgLoginReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgLoginReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgLoginReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgLoginReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgLoginReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgLoginReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgLoginReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgLoginReq result;
      
      private MsgLoginReq PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgLoginReq original = result;
          result = new MsgLoginReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgLoginReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgLoginReq.Descriptor; }
      }
      
      public override MsgLoginReq DefaultInstanceForType {
        get { return global::cobaya.MsgLoginReq.DefaultInstance; }
      }
      
      public override MsgLoginReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgLoginReq) {
          return MergeFrom((MsgLoginReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgLoginReq other) {
        if (other == global::cobaya.MsgLoginReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasHost) {
          Host = other.Host;
        }
        if (other.HasUser) {
          User = other.User;
        }
        if (other.HasPasswd) {
          Passwd = other.Passwd;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgLoginReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgLoginReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasHost = input.ReadString(ref result.host_);
              break;
            }
            case 18: {
              result.hasUser = input.ReadString(ref result.user_);
              break;
            }
            case 26: {
              result.hasPasswd = input.ReadString(ref result.passwd_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasHost {
        get { return result.hasHost; }
      }
      public string Host {
        get { return result.Host; }
        set { SetHost(value); }
      }
      public Builder SetHost(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder ClearHost() {
        PrepareBuilder();
        result.hasHost = false;
        result.host_ = "";
        return this;
      }
      
      public bool HasUser {
        get { return result.hasUser; }
      }
      public string User {
        get { return result.User; }
        set { SetUser(value); }
      }
      public Builder SetUser(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = value;
        return this;
      }
      public Builder ClearUser() {
        PrepareBuilder();
        result.hasUser = false;
        result.user_ = "";
        return this;
      }
      
      public bool HasPasswd {
        get { return result.hasPasswd; }
      }
      public string Passwd {
        get { return result.Passwd; }
        set { SetPasswd(value); }
      }
      public Builder SetPasswd(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPasswd = true;
        result.passwd_ = value;
        return this;
      }
      public Builder ClearPasswd() {
        PrepareBuilder();
        result.hasPasswd = false;
        result.passwd_ = "";
        return this;
      }
    }
    static MsgLoginReq() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgLoginRsp : pb::GeneratedMessage<MsgLoginRsp, MsgLoginRsp.Builder> {
    private MsgLoginRsp() { }
    private static readonly MsgLoginRsp defaultInstance = new MsgLoginRsp().MakeReadOnly();
    private static readonly string[] _msgLoginRspFieldNames = new string[] { "grant" };
    private static readonly uint[] _msgLoginRspFieldTags = new uint[] { 8 };
    public static MsgLoginRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgLoginRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgLoginRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgLoginRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgLoginRsp, MsgLoginRsp.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgLoginRsp__FieldAccessorTable; }
    }
    
    public const int GrantFieldNumber = 1;
    private bool hasGrant;
    private bool grant_;
    public bool HasGrant {
      get { return hasGrant; }
    }
    public bool Grant {
      get { return grant_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGrant) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgLoginRspFieldNames;
      if (hasGrant) {
        output.WriteBool(1, field_names[0], Grant);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGrant) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, Grant);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgLoginRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgLoginRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgLoginRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgLoginRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgLoginRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgLoginRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgLoginRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgLoginRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgLoginRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgLoginRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgLoginRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgLoginRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgLoginRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgLoginRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgLoginRsp result;
      
      private MsgLoginRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgLoginRsp original = result;
          result = new MsgLoginRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgLoginRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgLoginRsp.Descriptor; }
      }
      
      public override MsgLoginRsp DefaultInstanceForType {
        get { return global::cobaya.MsgLoginRsp.DefaultInstance; }
      }
      
      public override MsgLoginRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgLoginRsp) {
          return MergeFrom((MsgLoginRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgLoginRsp other) {
        if (other == global::cobaya.MsgLoginRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGrant) {
          Grant = other.Grant;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgLoginRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgLoginRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasGrant = input.ReadBool(ref result.grant_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGrant {
        get { return result.hasGrant; }
      }
      public bool Grant {
        get { return result.Grant; }
        set { SetGrant(value); }
      }
      public Builder SetGrant(bool value) {
        PrepareBuilder();
        result.hasGrant = true;
        result.grant_ = value;
        return this;
      }
      public Builder ClearGrant() {
        PrepareBuilder();
        result.hasGrant = false;
        result.grant_ = false;
        return this;
      }
    }
    static MsgLoginRsp() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgLogoutReq : pb::GeneratedMessage<MsgLogoutReq, MsgLogoutReq.Builder> {
    private MsgLogoutReq() { }
    private static readonly MsgLogoutReq defaultInstance = new MsgLogoutReq().MakeReadOnly();
    private static readonly string[] _msgLogoutReqFieldNames = new string[] { "host", "user" };
    private static readonly uint[] _msgLogoutReqFieldTags = new uint[] { 10, 18 };
    public static MsgLogoutReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgLogoutReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgLogoutReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgLogoutReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgLogoutReq, MsgLogoutReq.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgLogoutReq__FieldAccessorTable; }
    }
    
    public const int HostFieldNumber = 1;
    private bool hasHost;
    private string host_ = "";
    public bool HasHost {
      get { return hasHost; }
    }
    public string Host {
      get { return host_; }
    }
    
    public const int UserFieldNumber = 2;
    private bool hasUser;
    private string user_ = "";
    public bool HasUser {
      get { return hasUser; }
    }
    public string User {
      get { return user_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasHost) return false;
        if (!hasUser) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgLogoutReqFieldNames;
      if (hasHost) {
        output.WriteString(1, field_names[0], Host);
      }
      if (hasUser) {
        output.WriteString(2, field_names[1], User);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasHost) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Host);
        }
        if (hasUser) {
          size += pb::CodedOutputStream.ComputeStringSize(2, User);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgLogoutReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgLogoutReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgLogoutReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgLogoutReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgLogoutReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgLogoutReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgLogoutReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgLogoutReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgLogoutReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgLogoutReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgLogoutReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgLogoutReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgLogoutReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgLogoutReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgLogoutReq result;
      
      private MsgLogoutReq PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgLogoutReq original = result;
          result = new MsgLogoutReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgLogoutReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgLogoutReq.Descriptor; }
      }
      
      public override MsgLogoutReq DefaultInstanceForType {
        get { return global::cobaya.MsgLogoutReq.DefaultInstance; }
      }
      
      public override MsgLogoutReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgLogoutReq) {
          return MergeFrom((MsgLogoutReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgLogoutReq other) {
        if (other == global::cobaya.MsgLogoutReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasHost) {
          Host = other.Host;
        }
        if (other.HasUser) {
          User = other.User;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgLogoutReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgLogoutReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasHost = input.ReadString(ref result.host_);
              break;
            }
            case 18: {
              result.hasUser = input.ReadString(ref result.user_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasHost {
        get { return result.hasHost; }
      }
      public string Host {
        get { return result.Host; }
        set { SetHost(value); }
      }
      public Builder SetHost(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder ClearHost() {
        PrepareBuilder();
        result.hasHost = false;
        result.host_ = "";
        return this;
      }
      
      public bool HasUser {
        get { return result.hasUser; }
      }
      public string User {
        get { return result.User; }
        set { SetUser(value); }
      }
      public Builder SetUser(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = value;
        return this;
      }
      public Builder ClearUser() {
        PrepareBuilder();
        result.hasUser = false;
        result.user_ = "";
        return this;
      }
    }
    static MsgLogoutReq() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgLogoutRsp : pb::GeneratedMessage<MsgLogoutRsp, MsgLogoutRsp.Builder> {
    private MsgLogoutRsp() { }
    private static readonly MsgLogoutRsp defaultInstance = new MsgLogoutRsp().MakeReadOnly();
    private static readonly string[] _msgLogoutRspFieldNames = new string[] { "grant" };
    private static readonly uint[] _msgLogoutRspFieldTags = new uint[] { 8 };
    public static MsgLogoutRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgLogoutRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgLogoutRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgLogoutRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgLogoutRsp, MsgLogoutRsp.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgLogoutRsp__FieldAccessorTable; }
    }
    
    public const int GrantFieldNumber = 1;
    private bool hasGrant;
    private bool grant_;
    public bool HasGrant {
      get { return hasGrant; }
    }
    public bool Grant {
      get { return grant_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgLogoutRspFieldNames;
      if (hasGrant) {
        output.WriteBool(1, field_names[0], Grant);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGrant) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, Grant);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgLogoutRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgLogoutRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgLogoutRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgLogoutRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgLogoutRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgLogoutRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgLogoutRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgLogoutRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgLogoutRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgLogoutRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgLogoutRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgLogoutRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgLogoutRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgLogoutRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgLogoutRsp result;
      
      private MsgLogoutRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgLogoutRsp original = result;
          result = new MsgLogoutRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgLogoutRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgLogoutRsp.Descriptor; }
      }
      
      public override MsgLogoutRsp DefaultInstanceForType {
        get { return global::cobaya.MsgLogoutRsp.DefaultInstance; }
      }
      
      public override MsgLogoutRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgLogoutRsp) {
          return MergeFrom((MsgLogoutRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgLogoutRsp other) {
        if (other == global::cobaya.MsgLogoutRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGrant) {
          Grant = other.Grant;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgLogoutRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgLogoutRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasGrant = input.ReadBool(ref result.grant_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGrant {
        get { return result.hasGrant; }
      }
      public bool Grant {
        get { return result.Grant; }
        set { SetGrant(value); }
      }
      public Builder SetGrant(bool value) {
        PrepareBuilder();
        result.hasGrant = true;
        result.grant_ = value;
        return this;
      }
      public Builder ClearGrant() {
        PrepareBuilder();
        result.hasGrant = false;
        result.grant_ = false;
        return this;
      }
    }
    static MsgLogoutRsp() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgUpdateUserReq : pb::GeneratedMessage<MsgUpdateUserReq, MsgUpdateUserReq.Builder> {
    private MsgUpdateUserReq() { }
    private static readonly MsgUpdateUserReq defaultInstance = new MsgUpdateUserReq().MakeReadOnly();
    private static readonly string[] _msgUpdateUserReqFieldNames = new string[] { "host", "passwd", "user" };
    private static readonly uint[] _msgUpdateUserReqFieldTags = new uint[] { 10, 26, 18 };
    public static MsgUpdateUserReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgUpdateUserReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgUpdateUserReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgUpdateUserReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgUpdateUserReq, MsgUpdateUserReq.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgUpdateUserReq__FieldAccessorTable; }
    }
    
    public const int HostFieldNumber = 1;
    private bool hasHost;
    private string host_ = "";
    public bool HasHost {
      get { return hasHost; }
    }
    public string Host {
      get { return host_; }
    }
    
    public const int UserFieldNumber = 2;
    private bool hasUser;
    private string user_ = "";
    public bool HasUser {
      get { return hasUser; }
    }
    public string User {
      get { return user_; }
    }
    
    public const int PasswdFieldNumber = 3;
    private bool hasPasswd;
    private string passwd_ = "";
    public bool HasPasswd {
      get { return hasPasswd; }
    }
    public string Passwd {
      get { return passwd_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasHost) return false;
        if (!hasUser) return false;
        if (!hasPasswd) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgUpdateUserReqFieldNames;
      if (hasHost) {
        output.WriteString(1, field_names[0], Host);
      }
      if (hasUser) {
        output.WriteString(2, field_names[2], User);
      }
      if (hasPasswd) {
        output.WriteString(3, field_names[1], Passwd);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasHost) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Host);
        }
        if (hasUser) {
          size += pb::CodedOutputStream.ComputeStringSize(2, User);
        }
        if (hasPasswd) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Passwd);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgUpdateUserReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgUpdateUserReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgUpdateUserReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgUpdateUserReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgUpdateUserReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgUpdateUserReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgUpdateUserReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgUpdateUserReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgUpdateUserReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgUpdateUserReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgUpdateUserReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgUpdateUserReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgUpdateUserReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgUpdateUserReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgUpdateUserReq result;
      
      private MsgUpdateUserReq PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgUpdateUserReq original = result;
          result = new MsgUpdateUserReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgUpdateUserReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgUpdateUserReq.Descriptor; }
      }
      
      public override MsgUpdateUserReq DefaultInstanceForType {
        get { return global::cobaya.MsgUpdateUserReq.DefaultInstance; }
      }
      
      public override MsgUpdateUserReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgUpdateUserReq) {
          return MergeFrom((MsgUpdateUserReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgUpdateUserReq other) {
        if (other == global::cobaya.MsgUpdateUserReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasHost) {
          Host = other.Host;
        }
        if (other.HasUser) {
          User = other.User;
        }
        if (other.HasPasswd) {
          Passwd = other.Passwd;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgUpdateUserReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgUpdateUserReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasHost = input.ReadString(ref result.host_);
              break;
            }
            case 18: {
              result.hasUser = input.ReadString(ref result.user_);
              break;
            }
            case 26: {
              result.hasPasswd = input.ReadString(ref result.passwd_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasHost {
        get { return result.hasHost; }
      }
      public string Host {
        get { return result.Host; }
        set { SetHost(value); }
      }
      public Builder SetHost(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder ClearHost() {
        PrepareBuilder();
        result.hasHost = false;
        result.host_ = "";
        return this;
      }
      
      public bool HasUser {
        get { return result.hasUser; }
      }
      public string User {
        get { return result.User; }
        set { SetUser(value); }
      }
      public Builder SetUser(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = value;
        return this;
      }
      public Builder ClearUser() {
        PrepareBuilder();
        result.hasUser = false;
        result.user_ = "";
        return this;
      }
      
      public bool HasPasswd {
        get { return result.hasPasswd; }
      }
      public string Passwd {
        get { return result.Passwd; }
        set { SetPasswd(value); }
      }
      public Builder SetPasswd(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPasswd = true;
        result.passwd_ = value;
        return this;
      }
      public Builder ClearPasswd() {
        PrepareBuilder();
        result.hasPasswd = false;
        result.passwd_ = "";
        return this;
      }
    }
    static MsgUpdateUserReq() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgUpdateUserRsp : pb::GeneratedMessage<MsgUpdateUserRsp, MsgUpdateUserRsp.Builder> {
    private MsgUpdateUserRsp() { }
    private static readonly MsgUpdateUserRsp defaultInstance = new MsgUpdateUserRsp().MakeReadOnly();
    private static readonly string[] _msgUpdateUserRspFieldNames = new string[] { "grant" };
    private static readonly uint[] _msgUpdateUserRspFieldTags = new uint[] { 8 };
    public static MsgUpdateUserRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgUpdateUserRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgUpdateUserRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgUpdateUserRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgUpdateUserRsp, MsgUpdateUserRsp.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgUpdateUserRsp__FieldAccessorTable; }
    }
    
    public const int GrantFieldNumber = 1;
    private bool hasGrant;
    private bool grant_;
    public bool HasGrant {
      get { return hasGrant; }
    }
    public bool Grant {
      get { return grant_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGrant) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgUpdateUserRspFieldNames;
      if (hasGrant) {
        output.WriteBool(1, field_names[0], Grant);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGrant) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, Grant);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgUpdateUserRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgUpdateUserRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgUpdateUserRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgUpdateUserRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgUpdateUserRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgUpdateUserRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgUpdateUserRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgUpdateUserRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgUpdateUserRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgUpdateUserRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgUpdateUserRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgUpdateUserRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgUpdateUserRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgUpdateUserRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgUpdateUserRsp result;
      
      private MsgUpdateUserRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgUpdateUserRsp original = result;
          result = new MsgUpdateUserRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgUpdateUserRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgUpdateUserRsp.Descriptor; }
      }
      
      public override MsgUpdateUserRsp DefaultInstanceForType {
        get { return global::cobaya.MsgUpdateUserRsp.DefaultInstance; }
      }
      
      public override MsgUpdateUserRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgUpdateUserRsp) {
          return MergeFrom((MsgUpdateUserRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgUpdateUserRsp other) {
        if (other == global::cobaya.MsgUpdateUserRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGrant) {
          Grant = other.Grant;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgUpdateUserRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgUpdateUserRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasGrant = input.ReadBool(ref result.grant_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGrant {
        get { return result.hasGrant; }
      }
      public bool Grant {
        get { return result.Grant; }
        set { SetGrant(value); }
      }
      public Builder SetGrant(bool value) {
        PrepareBuilder();
        result.hasGrant = true;
        result.grant_ = value;
        return this;
      }
      public Builder ClearGrant() {
        PrepareBuilder();
        result.hasGrant = false;
        result.grant_ = false;
        return this;
      }
    }
    static MsgUpdateUserRsp() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgClientReq : pb::GeneratedMessage<MsgClientReq, MsgClientReq.Builder> {
    private MsgClientReq() { }
    private static readonly MsgClientReq defaultInstance = new MsgClientReq().MakeReadOnly();
    private static readonly string[] _msgClientReqFieldNames = new string[] { "hosts" };
    private static readonly uint[] _msgClientReqFieldTags = new uint[] { 10 };
    public static MsgClientReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgClientReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgClientReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgClientReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgClientReq, MsgClientReq.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgClientReq__FieldAccessorTable; }
    }
    
    public const int HostsFieldNumber = 1;
    private pbc::PopsicleList<string> hosts_ = new pbc::PopsicleList<string>();
    public scg::IList<string> HostsList {
      get { return pbc::Lists.AsReadOnly(hosts_); }
    }
    public int HostsCount {
      get { return hosts_.Count; }
    }
    public string GetHosts(int index) {
      return hosts_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgClientReqFieldNames;
      if (hosts_.Count > 0) {
        output.WriteStringArray(1, field_names[0], hosts_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        {
          int dataSize = 0;
          foreach (string element in HostsList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * hosts_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgClientReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgClientReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgClientReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgClientReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgClientReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgClientReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgClientReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgClientReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgClientReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgClientReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgClientReq MakeReadOnly() {
      hosts_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgClientReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgClientReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgClientReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgClientReq result;
      
      private MsgClientReq PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgClientReq original = result;
          result = new MsgClientReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgClientReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgClientReq.Descriptor; }
      }
      
      public override MsgClientReq DefaultInstanceForType {
        get { return global::cobaya.MsgClientReq.DefaultInstance; }
      }
      
      public override MsgClientReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgClientReq) {
          return MergeFrom((MsgClientReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgClientReq other) {
        if (other == global::cobaya.MsgClientReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.hosts_.Count != 0) {
          result.hosts_.Add(other.hosts_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgClientReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgClientReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadStringArray(tag, field_name, result.hosts_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<string> HostsList {
        get { return PrepareBuilder().hosts_; }
      }
      public int HostsCount {
        get { return result.HostsCount; }
      }
      public string GetHosts(int index) {
        return result.GetHosts(index);
      }
      public Builder SetHosts(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hosts_[index] = value;
        return this;
      }
      public Builder AddHosts(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hosts_.Add(value);
        return this;
      }
      public Builder AddRangeHosts(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.hosts_.Add(values);
        return this;
      }
      public Builder ClearHosts() {
        PrepareBuilder();
        result.hosts_.Clear();
        return this;
      }
    }
    static MsgClientReq() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgClientRsp : pb::GeneratedMessage<MsgClientRsp, MsgClientRsp.Builder> {
    private MsgClientRsp() { }
    private static readonly MsgClientRsp defaultInstance = new MsgClientRsp().MakeReadOnly();
    private static readonly string[] _msgClientRspFieldNames = new string[] { "dev_code", "fetch", "host" };
    private static readonly uint[] _msgClientRspFieldTags = new uint[] { 18, 24, 10 };
    public static MsgClientRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgClientRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgClientRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgClientRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgClientRsp, MsgClientRsp.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgClientRsp__FieldAccessorTable; }
    }
    
    public const int HostFieldNumber = 1;
    private bool hasHost;
    private string host_ = "";
    public bool HasHost {
      get { return hasHost; }
    }
    public string Host {
      get { return host_; }
    }
    
    public const int DevCodeFieldNumber = 2;
    private bool hasDevCode;
    private string devCode_ = "";
    public bool HasDevCode {
      get { return hasDevCode; }
    }
    public string DevCode {
      get { return devCode_; }
    }
    
    public const int FetchFieldNumber = 3;
    private bool hasFetch;
    private uint fetch_;
    public bool HasFetch {
      get { return hasFetch; }
    }
    [global::System.CLSCompliant(false)]
    public uint Fetch {
      get { return fetch_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasHost) return false;
        if (!hasDevCode) return false;
        if (!hasFetch) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgClientRspFieldNames;
      if (hasHost) {
        output.WriteString(1, field_names[2], Host);
      }
      if (hasDevCode) {
        output.WriteString(2, field_names[0], DevCode);
      }
      if (hasFetch) {
        output.WriteUInt32(3, field_names[1], Fetch);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasHost) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Host);
        }
        if (hasDevCode) {
          size += pb::CodedOutputStream.ComputeStringSize(2, DevCode);
        }
        if (hasFetch) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Fetch);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgClientRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgClientRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgClientRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgClientRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgClientRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgClientRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgClientRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgClientRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgClientRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgClientRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgClientRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgClientRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgClientRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgClientRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgClientRsp result;
      
      private MsgClientRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgClientRsp original = result;
          result = new MsgClientRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgClientRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgClientRsp.Descriptor; }
      }
      
      public override MsgClientRsp DefaultInstanceForType {
        get { return global::cobaya.MsgClientRsp.DefaultInstance; }
      }
      
      public override MsgClientRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgClientRsp) {
          return MergeFrom((MsgClientRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgClientRsp other) {
        if (other == global::cobaya.MsgClientRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasHost) {
          Host = other.Host;
        }
        if (other.HasDevCode) {
          DevCode = other.DevCode;
        }
        if (other.HasFetch) {
          Fetch = other.Fetch;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgClientRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgClientRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasHost = input.ReadString(ref result.host_);
              break;
            }
            case 18: {
              result.hasDevCode = input.ReadString(ref result.devCode_);
              break;
            }
            case 24: {
              result.hasFetch = input.ReadUInt32(ref result.fetch_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasHost {
        get { return result.hasHost; }
      }
      public string Host {
        get { return result.Host; }
        set { SetHost(value); }
      }
      public Builder SetHost(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder ClearHost() {
        PrepareBuilder();
        result.hasHost = false;
        result.host_ = "";
        return this;
      }
      
      public bool HasDevCode {
        get { return result.hasDevCode; }
      }
      public string DevCode {
        get { return result.DevCode; }
        set { SetDevCode(value); }
      }
      public Builder SetDevCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDevCode = true;
        result.devCode_ = value;
        return this;
      }
      public Builder ClearDevCode() {
        PrepareBuilder();
        result.hasDevCode = false;
        result.devCode_ = "";
        return this;
      }
      
      public bool HasFetch {
        get { return result.hasFetch; }
      }
      [global::System.CLSCompliant(false)]
      public uint Fetch {
        get { return result.Fetch; }
        set { SetFetch(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetFetch(uint value) {
        PrepareBuilder();
        result.hasFetch = true;
        result.fetch_ = value;
        return this;
      }
      public Builder ClearFetch() {
        PrepareBuilder();
        result.hasFetch = false;
        result.fetch_ = 0;
        return this;
      }
    }
    static MsgClientRsp() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgFetchFlowReq : pb::GeneratedMessage<MsgFetchFlowReq, MsgFetchFlowReq.Builder> {
    private MsgFetchFlowReq() { }
    private static readonly MsgFetchFlowReq defaultInstance = new MsgFetchFlowReq().MakeReadOnly();
    private static readonly string[] _msgFetchFlowReqFieldNames = new string[] { "dev_code" };
    private static readonly uint[] _msgFetchFlowReqFieldTags = new uint[] { 10 };
    public static MsgFetchFlowReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgFetchFlowReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgFetchFlowReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgFetchFlowReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgFetchFlowReq, MsgFetchFlowReq.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgFetchFlowReq__FieldAccessorTable; }
    }
    
    public const int DevCodeFieldNumber = 1;
    private bool hasDevCode;
    private string devCode_ = "";
    public bool HasDevCode {
      get { return hasDevCode; }
    }
    public string DevCode {
      get { return devCode_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasDevCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgFetchFlowReqFieldNames;
      if (hasDevCode) {
        output.WriteString(1, field_names[0], DevCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasDevCode) {
          size += pb::CodedOutputStream.ComputeStringSize(1, DevCode);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgFetchFlowReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgFetchFlowReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgFetchFlowReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgFetchFlowReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgFetchFlowReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgFetchFlowReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgFetchFlowReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgFetchFlowReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgFetchFlowReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgFetchFlowReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgFetchFlowReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgFetchFlowReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgFetchFlowReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgFetchFlowReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgFetchFlowReq result;
      
      private MsgFetchFlowReq PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgFetchFlowReq original = result;
          result = new MsgFetchFlowReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgFetchFlowReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgFetchFlowReq.Descriptor; }
      }
      
      public override MsgFetchFlowReq DefaultInstanceForType {
        get { return global::cobaya.MsgFetchFlowReq.DefaultInstance; }
      }
      
      public override MsgFetchFlowReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgFetchFlowReq) {
          return MergeFrom((MsgFetchFlowReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgFetchFlowReq other) {
        if (other == global::cobaya.MsgFetchFlowReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDevCode) {
          DevCode = other.DevCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgFetchFlowReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgFetchFlowReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasDevCode = input.ReadString(ref result.devCode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDevCode {
        get { return result.hasDevCode; }
      }
      public string DevCode {
        get { return result.DevCode; }
        set { SetDevCode(value); }
      }
      public Builder SetDevCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDevCode = true;
        result.devCode_ = value;
        return this;
      }
      public Builder ClearDevCode() {
        PrepareBuilder();
        result.hasDevCode = false;
        result.devCode_ = "";
        return this;
      }
    }
    static MsgFetchFlowReq() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UserFlow : pb::GeneratedMessage<UserFlow, UserFlow.Builder> {
    private UserFlow() { }
    private static readonly UserFlow defaultInstance = new UserFlow().MakeReadOnly();
    private static readonly string[] _userFlowFieldNames = new string[] { "apply_id", "doctor", "items", "office", "user", "user_id" };
    private static readonly uint[] _userFlowFieldTags = new uint[] { 18, 42, 50, 34, 26, 8 };
    public static UserFlow DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserFlow DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserFlow ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_UserFlow__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserFlow, UserFlow.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_UserFlow__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private ulong userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong UserId {
      get { return userId_; }
    }
    
    public const int ApplyIdFieldNumber = 2;
    private bool hasApplyId;
    private string applyId_ = "";
    public bool HasApplyId {
      get { return hasApplyId; }
    }
    public string ApplyId {
      get { return applyId_; }
    }
    
    public const int UserFieldNumber = 3;
    private bool hasUser;
    private string user_ = "";
    public bool HasUser {
      get { return hasUser; }
    }
    public string User {
      get { return user_; }
    }
    
    public const int OfficeFieldNumber = 4;
    private bool hasOffice;
    private string office_ = "";
    public bool HasOffice {
      get { return hasOffice; }
    }
    public string Office {
      get { return office_; }
    }
    
    public const int DoctorFieldNumber = 5;
    private bool hasDoctor;
    private string doctor_ = "";
    public bool HasDoctor {
      get { return hasDoctor; }
    }
    public string Doctor {
      get { return doctor_; }
    }
    
    public const int ItemsFieldNumber = 6;
    private pbc::PopsicleList<string> items_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ItemsList {
      get { return pbc::Lists.AsReadOnly(items_); }
    }
    public int ItemsCount {
      get { return items_.Count; }
    }
    public string GetItems(int index) {
      return items_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserId) return false;
        if (!hasApplyId) return false;
        if (!hasUser) return false;
        if (!hasOffice) return false;
        if (!hasDoctor) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _userFlowFieldNames;
      if (hasUserId) {
        output.WriteUInt64(1, field_names[5], UserId);
      }
      if (hasApplyId) {
        output.WriteString(2, field_names[0], ApplyId);
      }
      if (hasUser) {
        output.WriteString(3, field_names[4], User);
      }
      if (hasOffice) {
        output.WriteString(4, field_names[3], Office);
      }
      if (hasDoctor) {
        output.WriteString(5, field_names[1], Doctor);
      }
      if (items_.Count > 0) {
        output.WriteStringArray(6, field_names[2], items_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, UserId);
        }
        if (hasApplyId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ApplyId);
        }
        if (hasUser) {
          size += pb::CodedOutputStream.ComputeStringSize(3, User);
        }
        if (hasOffice) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Office);
        }
        if (hasDoctor) {
          size += pb::CodedOutputStream.ComputeStringSize(5, Doctor);
        }
        {
          int dataSize = 0;
          foreach (string element in ItemsList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * items_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UserFlow ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserFlow ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserFlow ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserFlow ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserFlow ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserFlow ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserFlow ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserFlow ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserFlow ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserFlow ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserFlow MakeReadOnly() {
      items_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserFlow prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UserFlow, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserFlow cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserFlow result;
      
      private UserFlow PrepareBuilder() {
        if (resultIsReadOnly) {
          UserFlow original = result;
          result = new UserFlow();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserFlow MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.UserFlow.Descriptor; }
      }
      
      public override UserFlow DefaultInstanceForType {
        get { return global::cobaya.UserFlow.DefaultInstance; }
      }
      
      public override UserFlow BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserFlow) {
          return MergeFrom((UserFlow) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserFlow other) {
        if (other == global::cobaya.UserFlow.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasApplyId) {
          ApplyId = other.ApplyId;
        }
        if (other.HasUser) {
          User = other.User;
        }
        if (other.HasOffice) {
          Office = other.Office;
        }
        if (other.HasDoctor) {
          Doctor = other.Doctor;
        }
        if (other.items_.Count != 0) {
          result.items_.Add(other.items_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userFlowFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userFlowFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserId = input.ReadUInt64(ref result.userId_);
              break;
            }
            case 18: {
              result.hasApplyId = input.ReadString(ref result.applyId_);
              break;
            }
            case 26: {
              result.hasUser = input.ReadString(ref result.user_);
              break;
            }
            case 34: {
              result.hasOffice = input.ReadString(ref result.office_);
              break;
            }
            case 42: {
              result.hasDoctor = input.ReadString(ref result.doctor_);
              break;
            }
            case 50: {
              input.ReadStringArray(tag, field_name, result.items_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetUserId(ulong value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0UL;
        return this;
      }
      
      public bool HasApplyId {
        get { return result.hasApplyId; }
      }
      public string ApplyId {
        get { return result.ApplyId; }
        set { SetApplyId(value); }
      }
      public Builder SetApplyId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasApplyId = true;
        result.applyId_ = value;
        return this;
      }
      public Builder ClearApplyId() {
        PrepareBuilder();
        result.hasApplyId = false;
        result.applyId_ = "";
        return this;
      }
      
      public bool HasUser {
        get { return result.hasUser; }
      }
      public string User {
        get { return result.User; }
        set { SetUser(value); }
      }
      public Builder SetUser(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = value;
        return this;
      }
      public Builder ClearUser() {
        PrepareBuilder();
        result.hasUser = false;
        result.user_ = "";
        return this;
      }
      
      public bool HasOffice {
        get { return result.hasOffice; }
      }
      public string Office {
        get { return result.Office; }
        set { SetOffice(value); }
      }
      public Builder SetOffice(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOffice = true;
        result.office_ = value;
        return this;
      }
      public Builder ClearOffice() {
        PrepareBuilder();
        result.hasOffice = false;
        result.office_ = "";
        return this;
      }
      
      public bool HasDoctor {
        get { return result.hasDoctor; }
      }
      public string Doctor {
        get { return result.Doctor; }
        set { SetDoctor(value); }
      }
      public Builder SetDoctor(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDoctor = true;
        result.doctor_ = value;
        return this;
      }
      public Builder ClearDoctor() {
        PrepareBuilder();
        result.hasDoctor = false;
        result.doctor_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> ItemsList {
        get { return PrepareBuilder().items_; }
      }
      public int ItemsCount {
        get { return result.ItemsCount; }
      }
      public string GetItems(int index) {
        return result.GetItems(index);
      }
      public Builder SetItems(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_[index] = value;
        return this;
      }
      public Builder AddItems(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_.Add(value);
        return this;
      }
      public Builder AddRangeItems(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.items_.Add(values);
        return this;
      }
      public Builder ClearItems() {
        PrepareBuilder();
        result.items_.Clear();
        return this;
      }
    }
    static UserFlow() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgFetchFlowRsp : pb::GeneratedMessage<MsgFetchFlowRsp, MsgFetchFlowRsp.Builder> {
    private MsgFetchFlowRsp() { }
    private static readonly MsgFetchFlowRsp defaultInstance = new MsgFetchFlowRsp().MakeReadOnly();
    private static readonly string[] _msgFetchFlowRspFieldNames = new string[] { "flows" };
    private static readonly uint[] _msgFetchFlowRspFieldTags = new uint[] { 10 };
    public static MsgFetchFlowRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgFetchFlowRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgFetchFlowRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgFetchFlowRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgFetchFlowRsp, MsgFetchFlowRsp.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgFetchFlowRsp__FieldAccessorTable; }
    }
    
    public const int FlowsFieldNumber = 1;
    private pbc::PopsicleList<global::cobaya.UserFlow> flows_ = new pbc::PopsicleList<global::cobaya.UserFlow>();
    public scg::IList<global::cobaya.UserFlow> FlowsList {
      get { return flows_; }
    }
    public int FlowsCount {
      get { return flows_.Count; }
    }
    public global::cobaya.UserFlow GetFlows(int index) {
      return flows_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::cobaya.UserFlow element in FlowsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgFetchFlowRspFieldNames;
      if (flows_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], flows_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::cobaya.UserFlow element in FlowsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgFetchFlowRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgFetchFlowRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgFetchFlowRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgFetchFlowRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgFetchFlowRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgFetchFlowRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgFetchFlowRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgFetchFlowRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgFetchFlowRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgFetchFlowRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgFetchFlowRsp MakeReadOnly() {
      flows_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgFetchFlowRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgFetchFlowRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgFetchFlowRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgFetchFlowRsp result;
      
      private MsgFetchFlowRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgFetchFlowRsp original = result;
          result = new MsgFetchFlowRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgFetchFlowRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgFetchFlowRsp.Descriptor; }
      }
      
      public override MsgFetchFlowRsp DefaultInstanceForType {
        get { return global::cobaya.MsgFetchFlowRsp.DefaultInstance; }
      }
      
      public override MsgFetchFlowRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgFetchFlowRsp) {
          return MergeFrom((MsgFetchFlowRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgFetchFlowRsp other) {
        if (other == global::cobaya.MsgFetchFlowRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.flows_.Count != 0) {
          result.flows_.Add(other.flows_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgFetchFlowRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgFetchFlowRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.flows_, global::cobaya.UserFlow.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::cobaya.UserFlow> FlowsList {
        get { return PrepareBuilder().flows_; }
      }
      public int FlowsCount {
        get { return result.FlowsCount; }
      }
      public global::cobaya.UserFlow GetFlows(int index) {
        return result.GetFlows(index);
      }
      public Builder SetFlows(int index, global::cobaya.UserFlow value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.flows_[index] = value;
        return this;
      }
      public Builder SetFlows(int index, global::cobaya.UserFlow.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.flows_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFlows(global::cobaya.UserFlow value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.flows_.Add(value);
        return this;
      }
      public Builder AddFlows(global::cobaya.UserFlow.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.flows_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFlows(scg::IEnumerable<global::cobaya.UserFlow> values) {
        PrepareBuilder();
        result.flows_.Add(values);
        return this;
      }
      public Builder ClearFlows() {
        PrepareBuilder();
        result.flows_.Clear();
        return this;
      }
    }
    static MsgFetchFlowRsp() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgCheckFlowReq : pb::GeneratedMessage<MsgCheckFlowReq, MsgCheckFlowReq.Builder> {
    private MsgCheckFlowReq() { }
    private static readonly MsgCheckFlowReq defaultInstance = new MsgCheckFlowReq().MakeReadOnly();
    private static readonly string[] _msgCheckFlowReqFieldNames = new string[] { "dev_code", "host", "id", "prev_id", "user" };
    private static readonly uint[] _msgCheckFlowReqFieldTags = new uint[] { 18, 10, 32, 40, 26 };
    public static MsgCheckFlowReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgCheckFlowReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgCheckFlowReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgCheckFlowReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgCheckFlowReq, MsgCheckFlowReq.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgCheckFlowReq__FieldAccessorTable; }
    }
    
    public const int HostFieldNumber = 1;
    private bool hasHost;
    private string host_ = "";
    public bool HasHost {
      get { return hasHost; }
    }
    public string Host {
      get { return host_; }
    }
    
    public const int DevCodeFieldNumber = 2;
    private bool hasDevCode;
    private string devCode_ = "";
    public bool HasDevCode {
      get { return hasDevCode; }
    }
    public string DevCode {
      get { return devCode_; }
    }
    
    public const int UserFieldNumber = 3;
    private bool hasUser;
    private string user_ = "";
    public bool HasUser {
      get { return hasUser; }
    }
    public string User {
      get { return user_; }
    }
    
    public const int IdFieldNumber = 4;
    private bool hasId;
    private ulong id_;
    public bool HasId {
      get { return hasId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Id {
      get { return id_; }
    }
    
    public const int PrevIdFieldNumber = 5;
    private bool hasPrevId;
    private ulong prevId_;
    public bool HasPrevId {
      get { return hasPrevId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong PrevId {
      get { return prevId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasHost) return false;
        if (!hasDevCode) return false;
        if (!hasUser) return false;
        if (!hasId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCheckFlowReqFieldNames;
      if (hasHost) {
        output.WriteString(1, field_names[1], Host);
      }
      if (hasDevCode) {
        output.WriteString(2, field_names[0], DevCode);
      }
      if (hasUser) {
        output.WriteString(3, field_names[4], User);
      }
      if (hasId) {
        output.WriteUInt64(4, field_names[2], Id);
      }
      if (hasPrevId) {
        output.WriteUInt64(5, field_names[3], PrevId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasHost) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Host);
        }
        if (hasDevCode) {
          size += pb::CodedOutputStream.ComputeStringSize(2, DevCode);
        }
        if (hasUser) {
          size += pb::CodedOutputStream.ComputeStringSize(3, User);
        }
        if (hasId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, Id);
        }
        if (hasPrevId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(5, PrevId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgCheckFlowReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgCheckFlowReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgCheckFlowReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgCheckFlowReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgCheckFlowReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgCheckFlowReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgCheckFlowReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgCheckFlowReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgCheckFlowReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgCheckFlowReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgCheckFlowReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgCheckFlowReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgCheckFlowReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgCheckFlowReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgCheckFlowReq result;
      
      private MsgCheckFlowReq PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgCheckFlowReq original = result;
          result = new MsgCheckFlowReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgCheckFlowReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgCheckFlowReq.Descriptor; }
      }
      
      public override MsgCheckFlowReq DefaultInstanceForType {
        get { return global::cobaya.MsgCheckFlowReq.DefaultInstance; }
      }
      
      public override MsgCheckFlowReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgCheckFlowReq) {
          return MergeFrom((MsgCheckFlowReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgCheckFlowReq other) {
        if (other == global::cobaya.MsgCheckFlowReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasHost) {
          Host = other.Host;
        }
        if (other.HasDevCode) {
          DevCode = other.DevCode;
        }
        if (other.HasUser) {
          User = other.User;
        }
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasPrevId) {
          PrevId = other.PrevId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCheckFlowReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCheckFlowReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasHost = input.ReadString(ref result.host_);
              break;
            }
            case 18: {
              result.hasDevCode = input.ReadString(ref result.devCode_);
              break;
            }
            case 26: {
              result.hasUser = input.ReadString(ref result.user_);
              break;
            }
            case 32: {
              result.hasId = input.ReadUInt64(ref result.id_);
              break;
            }
            case 40: {
              result.hasPrevId = input.ReadUInt64(ref result.prevId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasHost {
        get { return result.hasHost; }
      }
      public string Host {
        get { return result.Host; }
        set { SetHost(value); }
      }
      public Builder SetHost(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder ClearHost() {
        PrepareBuilder();
        result.hasHost = false;
        result.host_ = "";
        return this;
      }
      
      public bool HasDevCode {
        get { return result.hasDevCode; }
      }
      public string DevCode {
        get { return result.DevCode; }
        set { SetDevCode(value); }
      }
      public Builder SetDevCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDevCode = true;
        result.devCode_ = value;
        return this;
      }
      public Builder ClearDevCode() {
        PrepareBuilder();
        result.hasDevCode = false;
        result.devCode_ = "";
        return this;
      }
      
      public bool HasUser {
        get { return result.hasUser; }
      }
      public string User {
        get { return result.User; }
        set { SetUser(value); }
      }
      public Builder SetUser(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = value;
        return this;
      }
      public Builder ClearUser() {
        PrepareBuilder();
        result.hasUser = false;
        result.user_ = "";
        return this;
      }
      
      public bool HasId {
        get { return result.hasId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetId(ulong value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0UL;
        return this;
      }
      
      public bool HasPrevId {
        get { return result.hasPrevId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong PrevId {
        get { return result.PrevId; }
        set { SetPrevId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetPrevId(ulong value) {
        PrepareBuilder();
        result.hasPrevId = true;
        result.prevId_ = value;
        return this;
      }
      public Builder ClearPrevId() {
        PrepareBuilder();
        result.hasPrevId = false;
        result.prevId_ = 0UL;
        return this;
      }
    }
    static MsgCheckFlowReq() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgCheckFlowRsp : pb::GeneratedMessage<MsgCheckFlowRsp, MsgCheckFlowRsp.Builder> {
    private MsgCheckFlowRsp() { }
    private static readonly MsgCheckFlowRsp defaultInstance = new MsgCheckFlowRsp().MakeReadOnly();
    private static readonly string[] _msgCheckFlowRspFieldNames = new string[] { "grant" };
    private static readonly uint[] _msgCheckFlowRspFieldTags = new uint[] { 8 };
    public static MsgCheckFlowRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgCheckFlowRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgCheckFlowRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgCheckFlowRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgCheckFlowRsp, MsgCheckFlowRsp.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgCheckFlowRsp__FieldAccessorTable; }
    }
    
    public const int GrantFieldNumber = 1;
    private bool hasGrant;
    private bool grant_;
    public bool HasGrant {
      get { return hasGrant; }
    }
    public bool Grant {
      get { return grant_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCheckFlowRspFieldNames;
      if (hasGrant) {
        output.WriteBool(1, field_names[0], Grant);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGrant) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, Grant);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgCheckFlowRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgCheckFlowRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgCheckFlowRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgCheckFlowRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgCheckFlowRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgCheckFlowRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgCheckFlowRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgCheckFlowRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgCheckFlowRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgCheckFlowRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgCheckFlowRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgCheckFlowRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgCheckFlowRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgCheckFlowRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgCheckFlowRsp result;
      
      private MsgCheckFlowRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgCheckFlowRsp original = result;
          result = new MsgCheckFlowRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgCheckFlowRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgCheckFlowRsp.Descriptor; }
      }
      
      public override MsgCheckFlowRsp DefaultInstanceForType {
        get { return global::cobaya.MsgCheckFlowRsp.DefaultInstance; }
      }
      
      public override MsgCheckFlowRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgCheckFlowRsp) {
          return MergeFrom((MsgCheckFlowRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgCheckFlowRsp other) {
        if (other == global::cobaya.MsgCheckFlowRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGrant) {
          Grant = other.Grant;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCheckFlowRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCheckFlowRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasGrant = input.ReadBool(ref result.grant_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGrant {
        get { return result.hasGrant; }
      }
      public bool Grant {
        get { return result.Grant; }
        set { SetGrant(value); }
      }
      public Builder SetGrant(bool value) {
        PrepareBuilder();
        result.hasGrant = true;
        result.grant_ = value;
        return this;
      }
      public Builder ClearGrant() {
        PrepareBuilder();
        result.hasGrant = false;
        result.grant_ = false;
        return this;
      }
    }
    static MsgCheckFlowRsp() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgFriendFlowReq : pb::GeneratedMessage<MsgFriendFlowReq, MsgFriendFlowReq.Builder> {
    private MsgFriendFlowReq() { }
    private static readonly MsgFriendFlowReq defaultInstance = new MsgFriendFlowReq().MakeReadOnly();
    private static readonly string[] _msgFriendFlowReqFieldNames = new string[] { "dev_code", "host", "info" };
    private static readonly uint[] _msgFriendFlowReqFieldTags = new uint[] { 18, 10, 26 };
    public static MsgFriendFlowReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgFriendFlowReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgFriendFlowReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgFriendFlowReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgFriendFlowReq, MsgFriendFlowReq.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgFriendFlowReq__FieldAccessorTable; }
    }
    
    public const int HostFieldNumber = 1;
    private bool hasHost;
    private string host_ = "";
    public bool HasHost {
      get { return hasHost; }
    }
    public string Host {
      get { return host_; }
    }
    
    public const int DevCodeFieldNumber = 2;
    private bool hasDevCode;
    private string devCode_ = "";
    public bool HasDevCode {
      get { return hasDevCode; }
    }
    public string DevCode {
      get { return devCode_; }
    }
    
    public const int InfoFieldNumber = 3;
    private bool hasInfo;
    private string info_ = "";
    public bool HasInfo {
      get { return hasInfo; }
    }
    public string Info {
      get { return info_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasHost) return false;
        if (!hasDevCode) return false;
        if (!hasInfo) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgFriendFlowReqFieldNames;
      if (hasHost) {
        output.WriteString(1, field_names[1], Host);
      }
      if (hasDevCode) {
        output.WriteString(2, field_names[0], DevCode);
      }
      if (hasInfo) {
        output.WriteString(3, field_names[2], Info);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasHost) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Host);
        }
        if (hasDevCode) {
          size += pb::CodedOutputStream.ComputeStringSize(2, DevCode);
        }
        if (hasInfo) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Info);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgFriendFlowReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgFriendFlowReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgFriendFlowReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgFriendFlowReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgFriendFlowReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgFriendFlowReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgFriendFlowReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgFriendFlowReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgFriendFlowReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgFriendFlowReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgFriendFlowReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgFriendFlowReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgFriendFlowReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgFriendFlowReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgFriendFlowReq result;
      
      private MsgFriendFlowReq PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgFriendFlowReq original = result;
          result = new MsgFriendFlowReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgFriendFlowReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgFriendFlowReq.Descriptor; }
      }
      
      public override MsgFriendFlowReq DefaultInstanceForType {
        get { return global::cobaya.MsgFriendFlowReq.DefaultInstance; }
      }
      
      public override MsgFriendFlowReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgFriendFlowReq) {
          return MergeFrom((MsgFriendFlowReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgFriendFlowReq other) {
        if (other == global::cobaya.MsgFriendFlowReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasHost) {
          Host = other.Host;
        }
        if (other.HasDevCode) {
          DevCode = other.DevCode;
        }
        if (other.HasInfo) {
          Info = other.Info;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgFriendFlowReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgFriendFlowReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasHost = input.ReadString(ref result.host_);
              break;
            }
            case 18: {
              result.hasDevCode = input.ReadString(ref result.devCode_);
              break;
            }
            case 26: {
              result.hasInfo = input.ReadString(ref result.info_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasHost {
        get { return result.hasHost; }
      }
      public string Host {
        get { return result.Host; }
        set { SetHost(value); }
      }
      public Builder SetHost(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder ClearHost() {
        PrepareBuilder();
        result.hasHost = false;
        result.host_ = "";
        return this;
      }
      
      public bool HasDevCode {
        get { return result.hasDevCode; }
      }
      public string DevCode {
        get { return result.DevCode; }
        set { SetDevCode(value); }
      }
      public Builder SetDevCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDevCode = true;
        result.devCode_ = value;
        return this;
      }
      public Builder ClearDevCode() {
        PrepareBuilder();
        result.hasDevCode = false;
        result.devCode_ = "";
        return this;
      }
      
      public bool HasInfo {
        get { return result.hasInfo; }
      }
      public string Info {
        get { return result.Info; }
        set { SetInfo(value); }
      }
      public Builder SetInfo(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInfo = true;
        result.info_ = value;
        return this;
      }
      public Builder ClearInfo() {
        PrepareBuilder();
        result.hasInfo = false;
        result.info_ = "";
        return this;
      }
    }
    static MsgFriendFlowReq() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgFriendFlowRsp : pb::GeneratedMessage<MsgFriendFlowRsp, MsgFriendFlowRsp.Builder> {
    private MsgFriendFlowRsp() { }
    private static readonly MsgFriendFlowRsp defaultInstance = new MsgFriendFlowRsp().MakeReadOnly();
    private static readonly string[] _msgFriendFlowRspFieldNames = new string[] { "grant" };
    private static readonly uint[] _msgFriendFlowRspFieldTags = new uint[] { 8 };
    public static MsgFriendFlowRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgFriendFlowRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgFriendFlowRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgFriendFlowRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgFriendFlowRsp, MsgFriendFlowRsp.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgFriendFlowRsp__FieldAccessorTable; }
    }
    
    public const int GrantFieldNumber = 1;
    private bool hasGrant;
    private bool grant_;
    public bool HasGrant {
      get { return hasGrant; }
    }
    public bool Grant {
      get { return grant_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgFriendFlowRspFieldNames;
      if (hasGrant) {
        output.WriteBool(1, field_names[0], Grant);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGrant) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, Grant);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgFriendFlowRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgFriendFlowRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgFriendFlowRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgFriendFlowRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgFriendFlowRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgFriendFlowRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgFriendFlowRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgFriendFlowRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgFriendFlowRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgFriendFlowRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgFriendFlowRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgFriendFlowRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgFriendFlowRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgFriendFlowRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgFriendFlowRsp result;
      
      private MsgFriendFlowRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgFriendFlowRsp original = result;
          result = new MsgFriendFlowRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgFriendFlowRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgFriendFlowRsp.Descriptor; }
      }
      
      public override MsgFriendFlowRsp DefaultInstanceForType {
        get { return global::cobaya.MsgFriendFlowRsp.DefaultInstance; }
      }
      
      public override MsgFriendFlowRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgFriendFlowRsp) {
          return MergeFrom((MsgFriendFlowRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgFriendFlowRsp other) {
        if (other == global::cobaya.MsgFriendFlowRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGrant) {
          Grant = other.Grant;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgFriendFlowRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgFriendFlowRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasGrant = input.ReadBool(ref result.grant_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGrant {
        get { return result.hasGrant; }
      }
      public bool Grant {
        get { return result.Grant; }
        set { SetGrant(value); }
      }
      public Builder SetGrant(bool value) {
        PrepareBuilder();
        result.hasGrant = true;
        result.grant_ = value;
        return this;
      }
      public Builder ClearGrant() {
        PrepareBuilder();
        result.hasGrant = false;
        result.grant_ = false;
        return this;
      }
    }
    static MsgFriendFlowRsp() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgAheadFlowReq : pb::GeneratedMessage<MsgAheadFlowReq, MsgAheadFlowReq.Builder> {
    private MsgAheadFlowReq() { }
    private static readonly MsgAheadFlowReq defaultInstance = new MsgAheadFlowReq().MakeReadOnly();
    private static readonly string[] _msgAheadFlowReqFieldNames = new string[] { "dev_code", "host", "info" };
    private static readonly uint[] _msgAheadFlowReqFieldTags = new uint[] { 18, 10, 26 };
    public static MsgAheadFlowReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgAheadFlowReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgAheadFlowReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgAheadFlowReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgAheadFlowReq, MsgAheadFlowReq.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgAheadFlowReq__FieldAccessorTable; }
    }
    
    public const int HostFieldNumber = 1;
    private bool hasHost;
    private string host_ = "";
    public bool HasHost {
      get { return hasHost; }
    }
    public string Host {
      get { return host_; }
    }
    
    public const int DevCodeFieldNumber = 2;
    private bool hasDevCode;
    private string devCode_ = "";
    public bool HasDevCode {
      get { return hasDevCode; }
    }
    public string DevCode {
      get { return devCode_; }
    }
    
    public const int InfoFieldNumber = 3;
    private bool hasInfo;
    private string info_ = "";
    public bool HasInfo {
      get { return hasInfo; }
    }
    public string Info {
      get { return info_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasHost) return false;
        if (!hasDevCode) return false;
        if (!hasInfo) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgAheadFlowReqFieldNames;
      if (hasHost) {
        output.WriteString(1, field_names[1], Host);
      }
      if (hasDevCode) {
        output.WriteString(2, field_names[0], DevCode);
      }
      if (hasInfo) {
        output.WriteString(3, field_names[2], Info);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasHost) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Host);
        }
        if (hasDevCode) {
          size += pb::CodedOutputStream.ComputeStringSize(2, DevCode);
        }
        if (hasInfo) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Info);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgAheadFlowReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgAheadFlowReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgAheadFlowReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgAheadFlowReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgAheadFlowReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgAheadFlowReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgAheadFlowReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgAheadFlowReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgAheadFlowReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgAheadFlowReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgAheadFlowReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgAheadFlowReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgAheadFlowReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgAheadFlowReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgAheadFlowReq result;
      
      private MsgAheadFlowReq PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgAheadFlowReq original = result;
          result = new MsgAheadFlowReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgAheadFlowReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgAheadFlowReq.Descriptor; }
      }
      
      public override MsgAheadFlowReq DefaultInstanceForType {
        get { return global::cobaya.MsgAheadFlowReq.DefaultInstance; }
      }
      
      public override MsgAheadFlowReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgAheadFlowReq) {
          return MergeFrom((MsgAheadFlowReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgAheadFlowReq other) {
        if (other == global::cobaya.MsgAheadFlowReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasHost) {
          Host = other.Host;
        }
        if (other.HasDevCode) {
          DevCode = other.DevCode;
        }
        if (other.HasInfo) {
          Info = other.Info;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgAheadFlowReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgAheadFlowReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasHost = input.ReadString(ref result.host_);
              break;
            }
            case 18: {
              result.hasDevCode = input.ReadString(ref result.devCode_);
              break;
            }
            case 26: {
              result.hasInfo = input.ReadString(ref result.info_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasHost {
        get { return result.hasHost; }
      }
      public string Host {
        get { return result.Host; }
        set { SetHost(value); }
      }
      public Builder SetHost(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder ClearHost() {
        PrepareBuilder();
        result.hasHost = false;
        result.host_ = "";
        return this;
      }
      
      public bool HasDevCode {
        get { return result.hasDevCode; }
      }
      public string DevCode {
        get { return result.DevCode; }
        set { SetDevCode(value); }
      }
      public Builder SetDevCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDevCode = true;
        result.devCode_ = value;
        return this;
      }
      public Builder ClearDevCode() {
        PrepareBuilder();
        result.hasDevCode = false;
        result.devCode_ = "";
        return this;
      }
      
      public bool HasInfo {
        get { return result.hasInfo; }
      }
      public string Info {
        get { return result.Info; }
        set { SetInfo(value); }
      }
      public Builder SetInfo(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInfo = true;
        result.info_ = value;
        return this;
      }
      public Builder ClearInfo() {
        PrepareBuilder();
        result.hasInfo = false;
        result.info_ = "";
        return this;
      }
    }
    static MsgAheadFlowReq() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgAheadFlowRsp : pb::GeneratedMessage<MsgAheadFlowRsp, MsgAheadFlowRsp.Builder> {
    private MsgAheadFlowRsp() { }
    private static readonly MsgAheadFlowRsp defaultInstance = new MsgAheadFlowRsp().MakeReadOnly();
    private static readonly string[] _msgAheadFlowRspFieldNames = new string[] { "grant" };
    private static readonly uint[] _msgAheadFlowRspFieldTags = new uint[] { 8 };
    public static MsgAheadFlowRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgAheadFlowRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgAheadFlowRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgAheadFlowRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgAheadFlowRsp, MsgAheadFlowRsp.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgAheadFlowRsp__FieldAccessorTable; }
    }
    
    public const int GrantFieldNumber = 1;
    private bool hasGrant;
    private bool grant_;
    public bool HasGrant {
      get { return hasGrant; }
    }
    public bool Grant {
      get { return grant_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgAheadFlowRspFieldNames;
      if (hasGrant) {
        output.WriteBool(1, field_names[0], Grant);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGrant) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, Grant);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgAheadFlowRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgAheadFlowRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgAheadFlowRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgAheadFlowRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgAheadFlowRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgAheadFlowRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgAheadFlowRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgAheadFlowRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgAheadFlowRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgAheadFlowRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgAheadFlowRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgAheadFlowRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgAheadFlowRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgAheadFlowRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgAheadFlowRsp result;
      
      private MsgAheadFlowRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgAheadFlowRsp original = result;
          result = new MsgAheadFlowRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgAheadFlowRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgAheadFlowRsp.Descriptor; }
      }
      
      public override MsgAheadFlowRsp DefaultInstanceForType {
        get { return global::cobaya.MsgAheadFlowRsp.DefaultInstance; }
      }
      
      public override MsgAheadFlowRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgAheadFlowRsp) {
          return MergeFrom((MsgAheadFlowRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgAheadFlowRsp other) {
        if (other == global::cobaya.MsgAheadFlowRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGrant) {
          Grant = other.Grant;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgAheadFlowRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgAheadFlowRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasGrant = input.ReadBool(ref result.grant_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGrant {
        get { return result.hasGrant; }
      }
      public bool Grant {
        get { return result.Grant; }
        set { SetGrant(value); }
      }
      public Builder SetGrant(bool value) {
        PrepareBuilder();
        result.hasGrant = true;
        result.grant_ = value;
        return this;
      }
      public Builder ClearGrant() {
        PrepareBuilder();
        result.hasGrant = false;
        result.grant_ = false;
        return this;
      }
    }
    static MsgAheadFlowRsp() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgOrgFlowReq : pb::GeneratedMessage<MsgOrgFlowReq, MsgOrgFlowReq.Builder> {
    private MsgOrgFlowReq() { }
    private static readonly MsgOrgFlowReq defaultInstance = new MsgOrgFlowReq().MakeReadOnly();
    private static readonly string[] _msgOrgFlowReqFieldNames = new string[] { "info" };
    private static readonly uint[] _msgOrgFlowReqFieldTags = new uint[] { 10 };
    public static MsgOrgFlowReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgOrgFlowReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgOrgFlowReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgOrgFlowReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgOrgFlowReq, MsgOrgFlowReq.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgOrgFlowReq__FieldAccessorTable; }
    }
    
    public const int InfoFieldNumber = 1;
    private bool hasInfo;
    private string info_ = "";
    public bool HasInfo {
      get { return hasInfo; }
    }
    public string Info {
      get { return info_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasInfo) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgOrgFlowReqFieldNames;
      if (hasInfo) {
        output.WriteString(1, field_names[0], Info);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasInfo) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Info);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgOrgFlowReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgOrgFlowReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgOrgFlowReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgOrgFlowReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgOrgFlowReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgOrgFlowReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgOrgFlowReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgOrgFlowReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgOrgFlowReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgOrgFlowReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgOrgFlowReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgOrgFlowReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgOrgFlowReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgOrgFlowReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgOrgFlowReq result;
      
      private MsgOrgFlowReq PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgOrgFlowReq original = result;
          result = new MsgOrgFlowReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgOrgFlowReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgOrgFlowReq.Descriptor; }
      }
      
      public override MsgOrgFlowReq DefaultInstanceForType {
        get { return global::cobaya.MsgOrgFlowReq.DefaultInstance; }
      }
      
      public override MsgOrgFlowReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgOrgFlowReq) {
          return MergeFrom((MsgOrgFlowReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgOrgFlowReq other) {
        if (other == global::cobaya.MsgOrgFlowReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasInfo) {
          Info = other.Info;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgOrgFlowReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgOrgFlowReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasInfo = input.ReadString(ref result.info_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasInfo {
        get { return result.hasInfo; }
      }
      public string Info {
        get { return result.Info; }
        set { SetInfo(value); }
      }
      public Builder SetInfo(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInfo = true;
        result.info_ = value;
        return this;
      }
      public Builder ClearInfo() {
        PrepareBuilder();
        result.hasInfo = false;
        result.info_ = "";
        return this;
      }
    }
    static MsgOrgFlowReq() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MsgOrgFlowRsp : pb::GeneratedMessage<MsgOrgFlowRsp, MsgOrgFlowRsp.Builder> {
    private MsgOrgFlowRsp() { }
    private static readonly MsgOrgFlowRsp defaultInstance = new MsgOrgFlowRsp().MakeReadOnly();
    private static readonly string[] _msgOrgFlowRspFieldNames = new string[] { "status" };
    private static readonly uint[] _msgOrgFlowRspFieldTags = new uint[] { 8 };
    public static MsgOrgFlowRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgOrgFlowRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgOrgFlowRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgOrgFlowRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgOrgFlowRsp, MsgOrgFlowRsp.Builder> InternalFieldAccessors {
      get { return global::cobaya.Cobaya.internal__static_cobaya_MsgOrgFlowRsp__FieldAccessorTable; }
    }
    
    public const int StatusFieldNumber = 1;
    private bool hasStatus;
    private uint status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    [global::System.CLSCompliant(false)]
    public uint Status {
      get { return status_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgOrgFlowRspFieldNames;
      if (hasStatus) {
        output.WriteUInt32(1, field_names[0], Status);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, Status);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgOrgFlowRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgOrgFlowRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgOrgFlowRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgOrgFlowRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgOrgFlowRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgOrgFlowRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgOrgFlowRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgOrgFlowRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgOrgFlowRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgOrgFlowRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgOrgFlowRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgOrgFlowRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgOrgFlowRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgOrgFlowRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgOrgFlowRsp result;
      
      private MsgOrgFlowRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgOrgFlowRsp original = result;
          result = new MsgOrgFlowRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgOrgFlowRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::cobaya.MsgOrgFlowRsp.Descriptor; }
      }
      
      public override MsgOrgFlowRsp DefaultInstanceForType {
        get { return global::cobaya.MsgOrgFlowRsp.DefaultInstance; }
      }
      
      public override MsgOrgFlowRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgOrgFlowRsp) {
          return MergeFrom((MsgOrgFlowRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgOrgFlowRsp other) {
        if (other == global::cobaya.MsgOrgFlowRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStatus) {
          Status = other.Status;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgOrgFlowRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgOrgFlowRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasStatus = input.ReadUInt32(ref result.status_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      [global::System.CLSCompliant(false)]
      public uint Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetStatus(uint value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
    }
    static MsgOrgFlowRsp() {
      object.ReferenceEquals(global::cobaya.Cobaya.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class RpcService : pb::IService {
    public abstract void GetAdminInfo(
        pb::IRpcController controller,
        global::cobaya.MsgAdminReq request,
        global::System.Action<global::cobaya.MsgAdminRsp> done);
    public abstract void ControlSystem(
        pb::IRpcController controller,
        global::cobaya.MsgMonitorReq request,
        global::System.Action<global::cobaya.MsgMonitorRsp> done);
    public abstract void LoginSystem(
        pb::IRpcController controller,
        global::cobaya.MsgLoginReq request,
        global::System.Action<global::cobaya.MsgLoginRsp> done);
    public abstract void LogoutSystem(
        pb::IRpcController controller,
        global::cobaya.MsgLogoutReq request,
        global::System.Action<global::cobaya.MsgLogoutRsp> done);
    public abstract void UpdateUser(
        pb::IRpcController controller,
        global::cobaya.MsgUpdateUserReq request,
        global::System.Action<global::cobaya.MsgUpdateUserRsp> done);
    public abstract void GetClientInfo(
        pb::IRpcController controller,
        global::cobaya.MsgClientReq request,
        global::System.Action<global::cobaya.MsgClientRsp> done);
    public abstract void FetchFlow(
        pb::IRpcController controller,
        global::cobaya.MsgFetchFlowReq request,
        global::System.Action<global::cobaya.MsgFetchFlowRsp> done);
    public abstract void CheckFlow(
        pb::IRpcController controller,
        global::cobaya.MsgCheckFlowReq request,
        global::System.Action<global::cobaya.MsgCheckFlowRsp> done);
    public abstract void FriendFlow(
        pb::IRpcController controller,
        global::cobaya.MsgFriendFlowReq request,
        global::System.Action<global::cobaya.MsgFriendFlowRsp> done);
    public abstract void AheadFlow(
        pb::IRpcController controller,
        global::cobaya.MsgAheadFlowReq request,
        global::System.Action<global::cobaya.MsgAheadFlowRsp> done);
    public abstract void SetOrgFlow(
        pb::IRpcController controller,
        global::cobaya.MsgOrgFlowReq request,
        global::System.Action<global::cobaya.MsgOrgFlowRsp> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Cobaya.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.GetAdminInfo(controller, (global::cobaya.MsgAdminReq) request,
              pb::RpcUtil.SpecializeCallback<global::cobaya.MsgAdminRsp>(
              done));
          return;
        case 1:
          this.ControlSystem(controller, (global::cobaya.MsgMonitorReq) request,
              pb::RpcUtil.SpecializeCallback<global::cobaya.MsgMonitorRsp>(
              done));
          return;
        case 2:
          this.LoginSystem(controller, (global::cobaya.MsgLoginReq) request,
              pb::RpcUtil.SpecializeCallback<global::cobaya.MsgLoginRsp>(
              done));
          return;
        case 3:
          this.LogoutSystem(controller, (global::cobaya.MsgLogoutReq) request,
              pb::RpcUtil.SpecializeCallback<global::cobaya.MsgLogoutRsp>(
              done));
          return;
        case 4:
          this.UpdateUser(controller, (global::cobaya.MsgUpdateUserReq) request,
              pb::RpcUtil.SpecializeCallback<global::cobaya.MsgUpdateUserRsp>(
              done));
          return;
        case 5:
          this.GetClientInfo(controller, (global::cobaya.MsgClientReq) request,
              pb::RpcUtil.SpecializeCallback<global::cobaya.MsgClientRsp>(
              done));
          return;
        case 6:
          this.FetchFlow(controller, (global::cobaya.MsgFetchFlowReq) request,
              pb::RpcUtil.SpecializeCallback<global::cobaya.MsgFetchFlowRsp>(
              done));
          return;
        case 7:
          this.CheckFlow(controller, (global::cobaya.MsgCheckFlowReq) request,
              pb::RpcUtil.SpecializeCallback<global::cobaya.MsgCheckFlowRsp>(
              done));
          return;
        case 8:
          this.FriendFlow(controller, (global::cobaya.MsgFriendFlowReq) request,
              pb::RpcUtil.SpecializeCallback<global::cobaya.MsgFriendFlowRsp>(
              done));
          return;
        case 9:
          this.AheadFlow(controller, (global::cobaya.MsgAheadFlowReq) request,
              pb::RpcUtil.SpecializeCallback<global::cobaya.MsgAheadFlowRsp>(
              done));
          return;
        case 10:
          this.SetOrgFlow(controller, (global::cobaya.MsgOrgFlowReq) request,
              pb::RpcUtil.SpecializeCallback<global::cobaya.MsgOrgFlowRsp>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::cobaya.MsgAdminReq.DefaultInstance;
        case 1:
          return global::cobaya.MsgMonitorReq.DefaultInstance;
        case 2:
          return global::cobaya.MsgLoginReq.DefaultInstance;
        case 3:
          return global::cobaya.MsgLogoutReq.DefaultInstance;
        case 4:
          return global::cobaya.MsgUpdateUserReq.DefaultInstance;
        case 5:
          return global::cobaya.MsgClientReq.DefaultInstance;
        case 6:
          return global::cobaya.MsgFetchFlowReq.DefaultInstance;
        case 7:
          return global::cobaya.MsgCheckFlowReq.DefaultInstance;
        case 8:
          return global::cobaya.MsgFriendFlowReq.DefaultInstance;
        case 9:
          return global::cobaya.MsgAheadFlowReq.DefaultInstance;
        case 10:
          return global::cobaya.MsgOrgFlowReq.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::cobaya.MsgAdminRsp.DefaultInstance;
        case 1:
          return global::cobaya.MsgMonitorRsp.DefaultInstance;
        case 2:
          return global::cobaya.MsgLoginRsp.DefaultInstance;
        case 3:
          return global::cobaya.MsgLogoutRsp.DefaultInstance;
        case 4:
          return global::cobaya.MsgUpdateUserRsp.DefaultInstance;
        case 5:
          return global::cobaya.MsgClientRsp.DefaultInstance;
        case 6:
          return global::cobaya.MsgFetchFlowRsp.DefaultInstance;
        case 7:
          return global::cobaya.MsgCheckFlowRsp.DefaultInstance;
        case 8:
          return global::cobaya.MsgFriendFlowRsp.DefaultInstance;
        case 9:
          return global::cobaya.MsgAheadFlowRsp.DefaultInstance;
        case 10:
          return global::cobaya.MsgOrgFlowRsp.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::cobaya.RpcService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void GetAdminInfo(
          pb::IRpcController controller,
          global::cobaya.MsgAdminReq request,
          global::System.Action<global::cobaya.MsgAdminRsp> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::cobaya.MsgAdminRsp.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::cobaya.MsgAdminRsp, global::cobaya.MsgAdminRsp.Builder>(done, global::cobaya.MsgAdminRsp.DefaultInstance));
      }
      
      public override void ControlSystem(
          pb::IRpcController controller,
          global::cobaya.MsgMonitorReq request,
          global::System.Action<global::cobaya.MsgMonitorRsp> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::cobaya.MsgMonitorRsp.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::cobaya.MsgMonitorRsp, global::cobaya.MsgMonitorRsp.Builder>(done, global::cobaya.MsgMonitorRsp.DefaultInstance));
      }
      
      public override void LoginSystem(
          pb::IRpcController controller,
          global::cobaya.MsgLoginReq request,
          global::System.Action<global::cobaya.MsgLoginRsp> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::cobaya.MsgLoginRsp.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::cobaya.MsgLoginRsp, global::cobaya.MsgLoginRsp.Builder>(done, global::cobaya.MsgLoginRsp.DefaultInstance));
      }
      
      public override void LogoutSystem(
          pb::IRpcController controller,
          global::cobaya.MsgLogoutReq request,
          global::System.Action<global::cobaya.MsgLogoutRsp> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::cobaya.MsgLogoutRsp.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::cobaya.MsgLogoutRsp, global::cobaya.MsgLogoutRsp.Builder>(done, global::cobaya.MsgLogoutRsp.DefaultInstance));
      }
      
      public override void UpdateUser(
          pb::IRpcController controller,
          global::cobaya.MsgUpdateUserReq request,
          global::System.Action<global::cobaya.MsgUpdateUserRsp> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::cobaya.MsgUpdateUserRsp.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::cobaya.MsgUpdateUserRsp, global::cobaya.MsgUpdateUserRsp.Builder>(done, global::cobaya.MsgUpdateUserRsp.DefaultInstance));
      }
      
      public override void GetClientInfo(
          pb::IRpcController controller,
          global::cobaya.MsgClientReq request,
          global::System.Action<global::cobaya.MsgClientRsp> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::cobaya.MsgClientRsp.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::cobaya.MsgClientRsp, global::cobaya.MsgClientRsp.Builder>(done, global::cobaya.MsgClientRsp.DefaultInstance));
      }
      
      public override void FetchFlow(
          pb::IRpcController controller,
          global::cobaya.MsgFetchFlowReq request,
          global::System.Action<global::cobaya.MsgFetchFlowRsp> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::cobaya.MsgFetchFlowRsp.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::cobaya.MsgFetchFlowRsp, global::cobaya.MsgFetchFlowRsp.Builder>(done, global::cobaya.MsgFetchFlowRsp.DefaultInstance));
      }
      
      public override void CheckFlow(
          pb::IRpcController controller,
          global::cobaya.MsgCheckFlowReq request,
          global::System.Action<global::cobaya.MsgCheckFlowRsp> done) {
        channel.CallMethod(Descriptor.Methods[7],
            controller, request, global::cobaya.MsgCheckFlowRsp.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::cobaya.MsgCheckFlowRsp, global::cobaya.MsgCheckFlowRsp.Builder>(done, global::cobaya.MsgCheckFlowRsp.DefaultInstance));
      }
      
      public override void FriendFlow(
          pb::IRpcController controller,
          global::cobaya.MsgFriendFlowReq request,
          global::System.Action<global::cobaya.MsgFriendFlowRsp> done) {
        channel.CallMethod(Descriptor.Methods[8],
            controller, request, global::cobaya.MsgFriendFlowRsp.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::cobaya.MsgFriendFlowRsp, global::cobaya.MsgFriendFlowRsp.Builder>(done, global::cobaya.MsgFriendFlowRsp.DefaultInstance));
      }
      
      public override void AheadFlow(
          pb::IRpcController controller,
          global::cobaya.MsgAheadFlowReq request,
          global::System.Action<global::cobaya.MsgAheadFlowRsp> done) {
        channel.CallMethod(Descriptor.Methods[9],
            controller, request, global::cobaya.MsgAheadFlowRsp.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::cobaya.MsgAheadFlowRsp, global::cobaya.MsgAheadFlowRsp.Builder>(done, global::cobaya.MsgAheadFlowRsp.DefaultInstance));
      }
      
      public override void SetOrgFlow(
          pb::IRpcController controller,
          global::cobaya.MsgOrgFlowReq request,
          global::System.Action<global::cobaya.MsgOrgFlowRsp> done) {
        channel.CallMethod(Descriptor.Methods[10],
            controller, request, global::cobaya.MsgOrgFlowRsp.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::cobaya.MsgOrgFlowRsp, global::cobaya.MsgOrgFlowRsp.Builder>(done, global::cobaya.MsgOrgFlowRsp.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
